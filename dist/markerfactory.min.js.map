{"version":3,"file":"markerfactory.min.js","sources":["../src/icon_object.js","../src/helpers.js","../src/parsers.js","../src/create_text_marker.js","../src/create_fat_marker_icon.js","../src/create_transparent_marker_icon.js","../src/markerfactory.js","../src/create_cluster_icon.js"],"sourcesContent":["function IconObject(canvas, markerOpts) {\n\tthis.url = canvas.toDataURL();\n\tthis.fillColor = canvas.fillColor;\n\tthis.markerOpts = markerOpts;\n\tObject.assign(this, markerOpts);\n\treturn this;\n}\n\nIconObject.prototype.toJSON = function () {\n\treturn {\n\t\turl: null,\n\t\tmarkerOpts: this.markerOpts\n\t};\n};\n\nexport {\n\tIconObject\n};\n","export function hslaString(hslcolor) {\n\tif (hslcolor.a) {\n\t\treturn 'hsla(' + hslcolor.h + ',' + hslcolor.s + '%,' + hslcolor.l + '%,' + hslcolor.a + ')';\n\t}\n\treturn 'hsl(' + hslcolor.h + ',' + hslcolor.s + '%,' + hslcolor.l + '%)';\n}\n\nexport function rgbaString(hexcolor) {\n\tif (hexcolor.a) {\n\t\treturn 'rgba(' + hexcolor.r + ',' + hexcolor.g + ',' + hexcolor.b + ',' + hexcolor.a + ')';\n\t}\n\treturn 'rgb(' + hexcolor.r + ',' + hexcolor.g + ',' + hexcolor.b + ')';\n}\n\nexport function parseHalf(foo) {\n\treturn parseInt(foo / 2, 10);\n}\n\nexport function compact(array) {\n\tlet index = -1,\n\t\tlength = array ? array.length : 0,\n\t\tresIndex = 0,\n\t\tresult = [];\n\n\twhile (++index < length) {\n\t\tlet value = array[index];\n\t\tif (value) {\n\t\t\tresult[resIndex++] = value;\n\t\t}\n\t}\n\treturn result;\n}\n","import {\n    hslaString,\n    rgbaString,\n    parseHalf,\n    compact\n} from './helpers.js';\n\nexport function parseHex(hexstring, opacity, darkenfactor) {\n    let hexcolor = {\n        hex: hexstring\n    };\n    darkenfactor = darkenfactor || 1;\n\n    hexstring = hexstring.replace('#', '');\n    if (hexstring.length === 3) {\n        hexstring = hexstring[0] + hexstring[0] + hexstring[1] + hexstring[1] + hexstring[2] + hexstring[2];\n    }\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    hexcolor.r = parseInt(darkenfactor * (parseInt(hexstring.substring(0, 2), 16)), 10);\n    hexcolor.g = parseInt(darkenfactor * (parseInt(hexstring.substring(2, 4), 16)), 10);\n    hexcolor.b = parseInt(darkenfactor * (parseInt(hexstring.substring(4, 6), 16)), 10);\n    hexcolor.a = opacity;\n    hexcolor.fillColor = rgbaString(hexcolor);\n    hexcolor.strokeColor = [\n        'rgba(' + parseHalf(hexcolor.r),\n        parseHalf(hexcolor.g),\n        parseHalf(hexcolor.b), hexcolor.a + ')'\n    ].join(',');\n    hexcolor.rgb = hexcolor.fillColor;\n    return hexcolor;\n}\n\n\nexport function parseHSL(hslstring, opacity) {\n    let hslcolor = {},\n        hslcolor_stroke = {},\n        hslparts = compact(hslstring.split(/hsla?\\(|,|\\)|%/));\n\n    if (hslparts[3] === undefined) {\n        hslparts[3] = 1;\n    }\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    hslcolor.h = hslcolor_stroke.h = parseFloat(hslparts[0], 10);\n    hslcolor.s = hslcolor_stroke.s = parseFloat(hslparts[1], 10);\n    hslcolor.l = parseFloat(hslparts[2], 10);\n    hslcolor.a = hslcolor_stroke.a = parseFloat(opacity * hslparts[3], 10);\n    hslcolor_stroke.l = parseInt(hslcolor.l / 2, 10);\n\n\n    hslcolor.fillColor = hslaString(hslcolor);\n    hslcolor.strokeColor = hslaString(hslcolor_stroke);\n    hslcolor.hsl = hslcolor.fillColor;\n    return hslcolor;\n}\n\nexport function parseRGB(rgbstring, opacity, darkenfactor) {\n    let rgbcolor = {},\n        rgbparts = compact(rgbstring.split(/rgba?\\(|,|\\)/));\n\n    darkenfactor = darkenfactor || 1;\n\n    if (rgbparts[3] === undefined) {\n        rgbparts[3] = 1;\n    }\n\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    rgbcolor.r = parseInt(darkenfactor * (parseInt(rgbparts[0], 10) % 256), 10);\n    rgbcolor.g = parseInt(darkenfactor * (parseInt(rgbparts[1], 10) % 256), 10);\n    rgbcolor.b = parseInt(darkenfactor * (parseInt(rgbparts[2], 10) % 256), 10);\n    rgbcolor.a = parseFloat(opacity * rgbparts[3], 10);\n    rgbcolor.fillColor = rgbaString(rgbcolor);\n    rgbcolor.strokeColor = 'rgba(' + rgbcolor.r / 2 + ',' + rgbcolor.g / 2 + ',' + rgbcolor.b / 2 + ',' + rgbcolor.a + ')';\n    rgbcolor.rgb = rgbcolor.fillColor;\n    return rgbcolor;\n}\n\n\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n\nexport function hslToRGB(h, s, l, a, darkenfactor) {\n    let r, g, b;\n\n    darkenfactor = darkenfactor || 1;\n    h = parseFloat(h, 10) / 360;\n    s = parseFloat(s, 10) / 100;\n    l = parseFloat(l, 10) / 100;\n    if (a === undefined) {\n        a = 1;\n    }\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n\n\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        let p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    if (a === undefined) {\n        a = 1;\n    }\n\n    let rgb = {\n        r: Math.round(r * 255 * darkenfactor),\n        g: Math.round(g * 255 * darkenfactor),\n        b: Math.round(b * 255 * darkenfactor),\n        a: parseFloat(a, 10)\n    };\n\n    rgb.fillColor = rgbaString(rgb);\n\n    return rgb;\n\n}\n\nexport function rgbToHSL(in_r, in_g, in_b, in_a) {\n\n    let h,\n        r = (in_r % 256) / 255,\n        g = (in_g % 256) / 255,\n        b = (in_b % 256) / 255,\n        a = in_a === undefined ? 1 : in_a,\n        max = Math.max(r, g, b),\n        min = Math.min(r, g, b),\n        sum = (max + min),\n        diff = (max - min),\n        s = sum > 1 ? diff / (2 - sum) : diff / sum;\n\n    switch (max) {\n    case r:\n        h = (g - b) / diff + (g < b ? 6 : 0);\n        break;\n    case g:\n        h = (b - r) / diff + 2;\n        break;\n    case b:\n        h = (r - g) / diff + 4;\n        break;\n    default:\n        h = 0;\n        break;\n    }\n\n    h /= 6;\n\n    if (diff === 0) {\n        h = s = 0; // achromatic\n    }\n\n    let hsl = {\n        h: Math.round(360 * h),\n        s: Math.round(100 * s),\n        l: Math.round(50 * sum),\n        a: Math.round(100 * a) / 100\n    };\n\n    hsl.fillColor = hslaString(hsl);\n\n    return hsl;\n}\n\n\nfunction toDecColor(stringcolor) {\n    let parsedcolor = {};\n    if (!stringcolor) {\n        parsedcolor.fillColor = 'rgba(100,250,50,0.99)';\n    } else if (stringcolor.indexOf('rgb') !== -1) {\n        parsedcolor = parseRGB(stringcolor);\n    } else if (stringcolor.indexOf('hsl') !== -1) {\n        parsedcolor = parseHSL(stringcolor);\n    } else {\n        parsedcolor = parseHex(stringcolor);\n    }\n\n    return parsedcolor;\n}\n\n\nfunction getColor(val, range) {\n    const defaults = {\n        h: Math.floor((360 / range) * val),\n        s: 78, // constant saturation\n        l: 63, // constant luminance\n        a: 1\n    };\n\n    return hslaString(defaults);\n}\n\nfunction getColor1() {\n    const defaults1 = {\n        h: 1,\n        s: 78, // constant saturation\n        l: 33, // constant luminance\n        a: 1\n    };\n    return hslaString(defaults1);\n}\n\nfunction darken(stringcolor, factor) {\n    const darkercolor = {};\n    if (!factor) {\n        factor = 1;\n    }\n    if (stringcolor.fillColor.indexOf('rgb') !== -1) {\n        darkercolor.r = factor * parseHalf(stringcolor.r);\n        darkercolor.g = factor * parseHalf(stringcolor.g);\n        darkercolor.b = factor * parseHalf(stringcolor.b);\n        darkercolor.a = 0.99;\n        darkercolor.fillColor = rgbaString(darkercolor);\n    } else if (stringcolor.fillColor.indexOf('hsl') !== -1) {\n        darkercolor.h = stringcolor.h;\n        darkercolor.s = stringcolor.s;\n        darkercolor.l = factor * stringcolor.l - 30;\n        darkercolor.fillColor = hslaString(darkercolor);\n    }\n\n    return darkercolor;\n}\n\nexport function getColors(options) {\n    let color0, color1;\n    if (options.index !== undefined && options.count > 0) {\n        color0 = getColor(options.index, options.count);\n        color1 = getColor1();\n    } else {\n        let deccolor = toDecColor(options.color);\n        color0 = deccolor.fillColor;\n        color1 = darken(deccolor).fillColor;\n    }\n    return [color0, color1];\n}\n","import {\n    IconObject\n} from './icon_object.js';\n\nimport {\n    getColors\n} from './parsers.js';\n\nexport function createTextMarker(theoptions) {\n\n    const generateCanvas = function (options) {\n        let canvas = document.createElement(\"canvas\");\n        let ancho = 30,\n            alto = 40;\n        canvas.width = ancho + 18;\n        canvas.height = alto;\n        let x = canvas.width / 2,\n            y = canvas.height - 2,\n            radius = ancho / 2,\n            angulo = 0.6;\n\n        let font = \"'\" + options.font + \"'\" || 'Arial';\n        let fontsize = options.fontsize || 11;\n\n        let context = canvas.getContext(\"2d\");\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        let radius0 = 2 * radius,\n            cx = x + 0.95 * radius0,\n            cy = y + 0.45 * radius0;\n\n        let grad = context.createLinearGradient(0, 0, 0, canvas.height),\n            colors = getColors(options),\n            color0 = colors[0],\n            color1 = colors[1];\n\n        grad.addColorStop(0, color0);\n        grad.addColorStop(1, color1);\n\n        context.fillStyle = grad;\n        context.strokeStyle = 'rgba(200,200,200,0.7)';\n\n        context.beginPath();\n\n        //arco izquierdo\n        context.arc(cx - 1, cy, radius0, 9 * Math.PI / 8, -6 * Math.PI / 8, false);\n\n        // arco superior\n        context.arc(x, (y - 7) / 2, radius, angulo, Math.PI - angulo, true);\n\n        //arco derecho\n        context.arc(2 * x - cx + 1, cy, radius0, -0.95 * Math.PI / 3, -Math.PI / 8, false);\n        context.fill();\n        context.stroke();\n\n        context.beginPath();\n        context.arc(x, 0.40 * y, 2 * radius / 3, 0, 2 * Math.PI, false);\n        context.fillStyle = 'white';\n        context.fill();\n\n        context.beginPath();\n\n        // Render Label\n        //context.font = \"11pt Arial\";\n        context.font = fontsize + \"pt \" + font;\n        context.textBaseline = \"top\";\n\n        let textWidth = context.measureText(options.label);\n\n        if (textWidth.width > ancho || String(options.label).length > 3) {\n            context.rect(x - 2 - textWidth.width / 2, y - 30, x - 2 + textWidth.width / 2, y - 23);\n            context.fillStyle = '#F7F0F0';\n            context.fill();\n            context.stroke();\n        }\n\n        context.fillStyle = \"black\";\n        context.strokeStyle = \"black\";\n        // centre the text.\n        context.fillText(options.label, 1 + Math.floor((canvas.width / 2) - (textWidth.width / 2)), 8);\n\n        return canvas;\n\n    };\n    theoptions.scale = theoptions.scale || 0.75;\n    let markerCanvas = generateCanvas(theoptions),\n        markerOpts = {};\n\n    theoptions.type = 'textmarker';\n\n    Object.assign(markerOpts, theoptions);\n\n    if (window && window.google && window.google.maps) {\n        Object.assign(markerOpts, {\n            size: new google.maps.Size(48, 40),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(24 * theoptions.scale, 40 * theoptions.scale),\n            scaledSize: new google.maps.Size(48 * theoptions.scale, 40 * theoptions.scale)\n        });\n    }\n    let iconObj = new IconObject(markerCanvas, markerOpts);\n\n    return iconObj;\n}\n","import {\n\tIconObject\n} from './icon_object.js';\n\nimport {\n\tgetColors\n} from './parsers.js';\n\n\nexport function createFatMarkerIcon(theoptions) {\n\n\tconst generateFatCanvas = function (options) {\n\t\tlet canvas = options.canvas || document.createElement(\"canvas\"),\n\t\t\tanchorX = 27,\n\t\t\tanchorY = 53,\n\t\t\tradius = (anchorX - 9),\n\t\t\tangulo = 1.1,\n\t\t\tfont = options.font || 'fontello',\n\t\t\tfontsize = options.fontsize || 14,\n\t\t\tcontext = canvas.getContext(\"2d\"),\n\t\t\tgrad = context.createLinearGradient(0, 0, 0, anchorY);\n\n\t\tcanvas.width = anchorX * 2;\n\t\tcanvas.height = anchorY + 1;\n\n\t\tlet colors = getColors(options),\n\t\t\tcolor0 = colors[0],\n\t\t\tcolor1 = colors[1];\n\n\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\n\t\tgrad.addColorStop(0, color0);\n\t\tgrad.addColorStop(1, color1);\n\n\t\tcontext.fillStyle = grad;\n\t\tcontext.strokeStyle = color1;\n\t\tcontext.beginPath();\n\n\t\tcontext.moveTo(anchorX, anchorY);\n\n\t\t// arco superior\n\t\tcontext.arc(anchorX, 2 + (0.50 * anchorY), radius, angulo, Math.PI - angulo, true);\n\n\t\t//punta inferior\n\t\tcontext.lineTo(anchorX, anchorY);\n\n\t\tcontext.fill();\n\t\tcontext.stroke();\n\n\t\t// Círculo blanco\n\t\tcontext.beginPath();\n\t\tcontext.arc(anchorX, 2 + (0.50 * anchorY), (radius - 3), 0, 2 * Math.PI, false);\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fill();\n\n\t\tcontext.beginPath();\n\n\t\tcontext.font = 'normal normal normal ' + fontsize + 'px ' + font;\n\t\t//console.log('context font', context.font);\n\t\tcontext.fillStyle = color1;\n\t\tcontext.textBaseline = \"top\";\n\n\t\tlet textWidth = context.measureText(options.unicodelabel),\n\t\t\ttext_x = options.unicodelabel,\n\t\t\tlabel_x = Math.floor((canvas.width / 2) - (textWidth.width / 2)),\n\t\t\tlabel_y = 1 + Math.floor(canvas.height / 2 - fontsize / 2);\n\n\t\t// centre the text.\n\t\tcontext.fillText(text_x, label_x, label_y);\n\t\tcanvas.fillColor = color0;\n\t\treturn canvas;\n\t};\n\n\tlet scale = theoptions.scale || 1,\n\t\tmarkerCanvas = generateFatCanvas(theoptions),\n\t\tmarkerOpts = {};\n\n\ttheoptions.type = 'fatmarker';\n\n\tObject.assign(markerOpts, theoptions);\n\n\tif (window && window.google && window.google.maps) {\n\t\tObject.assign(markerOpts, {\n\t\t\tsize: new google.maps.Size(54, 48),\n\t\t\torigin: new google.maps.Point(0, 0),\n\t\t\tanchor: new google.maps.Point(21 * scale, 36 * scale),\n\t\t\tscaledSize: new google.maps.Size(42 * scale, 36 * scale),\n\t\t\tscale: scale\n\t\t});\n\t}\n\tlet iconObj = new IconObject(markerCanvas, markerOpts);\n\treturn iconObj;\n}\n","import {\n    IconObject\n} from './icon_object.js';\n\nimport {\n    getColors\n} from './parsers.js';\n\nexport function createTransparentMarkerIcon(theoptions) {\n\n    const generateTransparentCanvas = function (options) {\n        let text_x,\n            canvas = options.canvas || document.createElement(\"canvas\"),\n            context = canvas.getContext(\"2d\"),\n            font = options.font || 'fontello',\n            fontsize = options.fontsize || 26;\n\n        canvas.width = 54;\n        canvas.height = 48;\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        let colors = getColors(options),\n            color0 = colors[0],\n            color1 = colors[1];\n        context.beginPath();\n\n        if (options.shadow) {\n\n            context.font = 'normal normal normal ' + fontsize + 'px ' + font;\n\n            context.textBaseline = \"top\";\n            let textWidth = context.measureText(options.unicodelabel);\n            text_x = Math.floor((canvas.width / 2) - (textWidth.width / 2));\n\n            context.shadowOffsetX = -2;\n            context.shadowOffsetY = -2;\n            context.shadowBlur = 0;\n\n            context.fillStyle = '#FFFFFF';\n            context.shadowColor = '#666666';\n\n            context.fillText(options.unicodelabel, text_x - 4, 2);\n            context.fillText(options.unicodelabel, text_x, 5);\n            context.fillStyle = color0;\n            context.fillText(options.unicodelabel, text_x + 4, 8);\n\n            context.strokeStyle = '#FFFFFF';\n            context.strokeText(options.unicodelabel, text_x + 4, 8);\n\n        } else {\n\n            context.font = 'normal normal normal ' + (fontsize - 3) + 'px ' + font;\n\n            context.textBaseline = \"top\";\n            let textmetric = context.measureText(options.unicodelabel);\n            text_x = Math.floor((canvas.width / 2) - (textmetric.width / 2));\n\n            //console.debug('textmetric', textmetric);\n\n            context.shadowOffsetX = 2;\n            context.shadowOffsetY = 2;\n            context.shadowBlur = 0;\n            context.shadowColor = '#FFFFFF';\n            context.fillStyle = color0;\n            context.fillText(options.unicodelabel, text_x + 1, 6);\n\n            context.shadowOffsetX = 2;\n            context.shadowOffsetY = 2;\n            context.shadowBlur = 1;\n            context.shadowColor = '#FFFFFF';\n            context.strokeStyle = color1;\n            context.strokeText(options.unicodelabel, text_x + 1, 6);\n\n        }\n\n        canvas.fillColor = color0;\n\n        return canvas;\n\n    };\n\n    theoptions.scale = theoptions.scale || 1;\n    theoptions.fontsize = theoptions.fontsize || 26;\n\n    let markerCanvas = generateTransparentCanvas(theoptions),\n        markerOpts = {};\n\n    let scale = theoptions.scale;\n\n    theoptions.type = 'transparent';\n\n    Object.assign(markerOpts, theoptions);\n\n    if (window.google && window.google.maps) {\n        Object.assign(markerOpts, {\n            size: new google.maps.Size(54 * scale, 48 * scale),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(27 * scale, 24 * scale),\n            scaledSize: new google.maps.Size(54 * scale, 48 * scale)\n        });\n    }\n    let iconObj = new IconObject(markerCanvas, markerOpts);\n\n    return iconObj;\n}\n","/** global: google, r, g, b */\n\nimport {\n    createClusterIcon\n} from './create_cluster_icon.js';\nimport {\n    createTextMarker\n} from './create_text_marker.js';\n\nimport {\n    createFatMarkerIcon\n} from './create_fat_marker_icon.js';\n\nimport {\n    createTransparentMarkerIcon\n} from './create_transparent_marker_icon.js';\n\nimport {\n    parseHex,\n    parseHSL,\n    parseRGB,\n    hslToRGB,\n    rgbToHSL\n} from './parsers.js';\n\nfunction padHex(str_in) {\n    if (('' + str_in).length === 1) {\n        return '0' + String(str_in);\n    } else {\n        return String(str_in);\n    }\n}\n\n\nfunction generateAutoicon(options) {\n    if (!options.is_icon) {\n        return createTextMarker(options);\n    } else if (options.transparent_background) {\n        console.log('createTransparentMarkerIcon', options.font);\n        return createTransparentMarkerIcon(options);\n    } else {\n        console.log('createFatMarkerIcon', options.font);\n        return createFatMarkerIcon(options);\n    }\n}\n\nconst MarkerFactory = {\n    createTransparentMarkerIcon: createTransparentMarkerIcon,\n    createFatMarkerIcon: createFatMarkerIcon,\n    createTextMarker: createTextMarker,\n    /**\n     * Receives a color string rgb(a), hsl(a) or hex, returns its components\n     * in rgba and hsla, with optional transparency\n     * plus a darkened version (default is half of each RGB component) and a\n     *\n     * @param {string} somecolor    - A color string in  rgb(a), hsl(a) or hex format\n     * @param {Number} opacity      - Opacity to apply to the color. Optional, default 1\n     * @param {Number} darkenfactor - How much darker should the resulting color be. Optional, default 1\n     *\n     * @return     {Object}  input color parsed and modified as requested\n     */\n    parseColorString: function (somecolor, opacity, darkenfactor) {\n        let parsedcolor = {\n                original: somecolor\n            },\n            hsl, rgb;\n\n        darkenfactor = darkenfactor || 1;\n        opacity = opacity || 1;\n\n        if (somecolor.indexOf('hsl') !== -1) {\n            hsl = parseHSL(somecolor, opacity);\n            rgb = hslToRGB(hsl.h, hsl.s, hsl.l, hsl.a, darkenfactor);\n\n        } else if (somecolor.indexOf('rgb') !== -1) {\n            rgb = parseRGB(somecolor, opacity, darkenfactor);\n        } else {\n            rgb = parseHex(somecolor, opacity, darkenfactor);\n        }\n\n\n        hsl = rgbToHSL(rgb.r, rgb.g, rgb.b, rgb.a);\n\n\n        parsedcolor.hsl = {\n            h: hsl.h,\n            s: hsl.s,\n            l: hsl.l,\n            a: hsl.a\n        };\n        parsedcolor.rgb = {\n            r: rgb.r,\n            g: rgb.g,\n            b: rgb.b,\n            a: rgb.a\n        };\n\n\n        parsedcolor.fillColor = rgb.fillColor;\n        parsedcolor.rgba = rgb.fillColor;\n        parsedcolor.hsla = hsl.fillColor;\n        parsedcolor.strokeColor = rgb.strokeColor;\n        parsedcolor.hex = ['#', padHex(rgb.r.toString(16)), padHex(rgb.g.toString(16)), padHex(rgb.b.toString(16))].join('');\n        return parsedcolor;\n    },\n\n    /**\n     * Generates an google maps marker (or an image as dataurl from the given options)\n     *\n     * @param      {Object}  options  The options\n     * @return     {Object}  { description_of_the_return_value }\n     */\n    autoIcon: function (options) {\n\n        if (typeof (options) !== 'object') {\n            console.warn('autoIcon expects an object as its only parameter');\n            return null;\n        }\n        // unless explicitly set to false, the icon doesn't have a marker-like wrapper\n        options.transparent_background = (options.transparent_background !== false);\n        options.label = String(options.label || 'A');\n        options.color = options.color || '#FF0000';\n\n\n        if (options.label.length === 4 || options.label.substring(0, 2) === '0x') {\n            options.font = options.font || 'fontello';\n            options.label = (options.label || 'e836').slice(-4);\n            options.unicodelabel = String.fromCharCode('0x' + options.label);\n            options.scale = options.scale || 1;\n            options.is_icon = true;\n            return generateAutoicon(options);\n\n        } else if (options.shadow) {\n\n            return createClusterIcon(options);\n\n        } else {\n            options.scale = options.scale || 0.75;\n            options.label = String(options.label || 'A');\n            options.fontsize = options.fontsize || 11;\n            options.font = options.font || 'Arial';\n            // This is text I should print literally\n            return generateAutoicon(options);\n        }\n\n    }\n};\n\n\nexport {\n    MarkerFactory\n};\nexport default MarkerFactory;\n","import {\n    IconObject\n} from './icon_object.js';\n\nfunction createClusterIcon(theoptions) {\n\n    const generateClusterCanvas = function (options) {\n        let canvas = options.canvas || document.createElement(\"canvas\"),\n            anchorX = 27,\n            anchorY = 53,\n            radius = (anchorX - 9),\n            color1,\n            font = options.font || 'fontello',\n            fontsize = options.fontsize || 14,\n            context = canvas.getContext(\"2d\");\n\n        canvas.width = anchorX * 2;\n        canvas.height = anchorY + 1;\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.moveTo(anchorX, anchorY);\n\n        let labelvalue = parseInt(options.label, 10);\n        if (labelvalue < 10) {\n            color1 = 'orange';\n            fontsize = 14;\n        } else if (labelvalue < 30) {\n            color1 = 'red';\n            fontsize = 15;\n        } else {\n            color1 = 'purple';\n            fontsize = 16;\n        }\n        if (labelvalue > 99) {\n            radius = radius + 3;\n            context.setLineDash([5, 5]);\n            context.beginPath();\n            context.arc(anchorX, 2 + (0.50 * anchorY), (radius + 7), 0, 2 * Math.PI, false);\n            context.fillStyle = 'transparent';\n            context.strokeStyle = color1;\n            context.lineWidth = 2;\n            context.fill();\n            context.stroke();\n        }\n\n        context.setLineDash([5, 5]);\n        context.beginPath();\n        context.arc(anchorX, 2 + (0.50 * anchorY), (radius + 2), 0, 2 * Math.PI, false);\n        context.fillStyle = 'transparent';\n        context.strokeStyle = color1;\n        context.lineWidth = 2;\n        context.fill();\n        context.stroke();\n\n        // Círculo blanco\n        context.setLineDash([5, 0]);\n        context.beginPath();\n        context.arc(anchorX, 2 + (0.50 * anchorY), (radius - 3), 0, 2 * Math.PI, false);\n        context.fillStyle = 'white';\n        context.strokeStyle = color1;\n        context.lineWidth = 4;\n        context.fill();\n        context.stroke();\n\n        context.beginPath();\n\n        context.font = 'normal normal normal ' + fontsize + 'px ' + font;\n        console.log('context font', context.font);\n        context.fillStyle = '#333';\n        context.textBaseline = \"top\";\n\n\n        let textWidth = context.measureText(options.label),\n            text_x = options.label,\n            label_x = Math.floor((canvas.width / 2) - (textWidth.width / 2)),\n            label_y = 1 + Math.floor(canvas.height / 2 - fontsize / 2);\n\n        // centre the text.\n        context.fillText(text_x, label_x, label_y);\n\n        return canvas;\n\n    };\n    theoptions.scale = theoptions.scale || 1;\n    let markerCanvas = generateClusterCanvas(theoptions),\n        markerOpts = {},\n        scale = theoptions.scale;\n\n    Object.assign(markerOpts, theoptions);\n\n    if (window && window.google && window.google.maps) {\n        Object.assign(markerOpts, {\n            size: new google.maps.Size(54, 48),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(27 * scale, 24 * scale),\n            scaledSize: new google.maps.Size(54 * scale, 48 * scale)\n        });\n    }\n\n    let iconObj = new IconObject(markerCanvas, markerOpts);\n\n    return iconObj;\n}\n\nexport {\n    createClusterIcon\n};\n"],"names":["IconObject","canvas","markerOpts","this","url","toDataURL","fillColor","Object","assign","hslaString","hslcolor","a","h","s","l","rgbaString","hexcolor","r","g","b","parseHalf","foo","parseInt","compact","array","index","length","resIndex","result","value","parseHex","hexstring","opacity","darkenfactor","hex","replace","isNaN","parseFloat","substring","strokeColor","join","rgb","parseHSL","hslstring","hslcolor_stroke","hslparts","split","undefined","hsl","parseRGB","rgbstring","rgbcolor","rgbparts","hue2rgb","p","q","t","getColors","options","color0","color1","count","val","range","Math","floor","getColor","deccolor","stringcolor","parsedcolor","indexOf","toDecColor","color","factor","darkercolor","darken","createTextMarker","theoptions","scale","markerCanvas","document","createElement","width","ancho","height","x","y","font","fontsize","context","getContext","clearRect","cx","cy","grad","createLinearGradient","colors","addColorStop","fillStyle","strokeStyle","beginPath","arc","PI","fill","stroke","textBaseline","textWidth","measureText","label","String","rect","fillText","generateCanvas","type","window","google","maps","size","Size","origin","Point","anchor","scaledSize","createFatMarkerIcon","anchorX","anchorY","moveTo","lineTo","unicodelabel","text_x","label_x","label_y","generateFatCanvas","createTransparentMarkerIcon","shadow","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","strokeText","textmetric","generateTransparentCanvas","padHex","str_in","generateAutoicon","is_icon","transparent_background","prototype","toJSON","MarkerFactory","parseColorString","somecolor","original","round","hslToRGB","in_r","in_g","in_b","in_a","max","min","sum","diff","rgbToHSL","rgba","hsla","toString","autoIcon","console","warn","slice","fromCharCode","radius","labelvalue","setLineDash","lineWidth","generateClusterCanvas","createClusterIcon"],"mappings":"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"}