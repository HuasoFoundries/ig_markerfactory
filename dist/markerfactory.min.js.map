{"version":3,"file":"markerfactory.min.js","sources":["../src/helpers.js","../src/icon_object.js","../src/parsers.js","../src/markerfactory.js","../src/create_cluster_icon.js","../src/create_text_marker.js","../src/create_fat_marker_icon.js","../src/create_grouped_icon.js","../src/create_transparent_marker_icon.js"],"sourcesContent":["export function hslaString(hslcolor) {\n\tif (hslcolor.a !== undefined) {\n\t\treturn (\n\t\t\t\"hsla(\" +\n\t\t\thslcolor.h +\n\t\t\t\",\" +\n\t\t\thslcolor.s +\n\t\t\t\"%,\" +\n\t\t\thslcolor.l +\n\t\t\t\"%,\" +\n\t\t\tparseFloat(hslcolor.a, 10) +\n\t\t\t\")\"\n\t\t);\n\t}\n\treturn \"hsl(\" + hslcolor.h + \",\" + hslcolor.s + \"%,\" + hslcolor.l + \"%)\";\n}\n\nexport function rgbaString(hexcolor) {\n\tif (hexcolor.a !== undefined) {\n\t\treturn (\n\t\t\t\"rgba(\" +\n\t\t\thexcolor.r +\n\t\t\t\",\" +\n\t\t\thexcolor.g +\n\t\t\t\",\" +\n\t\t\thexcolor.b +\n\t\t\t\",\" +\n\t\t\tparseFloat(hexcolor.a, 10) +\n\t\t\t\")\"\n\t\t);\n\t}\n\treturn \"rgb(\" + hexcolor.r + \",\" + hexcolor.g + \",\" + hexcolor.b + \")\";\n}\n\nexport function parseHalf(foo) {\n\treturn parseInt(foo / 2, 10);\n}\n\nexport function compact(array) {\n\tlet index = -1,\n\t\tlength = array ? array.length : 0,\n\t\tresIndex = 0,\n\t\tresult = [];\n\n\twhile (++index < length) {\n\t\tlet value = array[index];\n\t\tif (value) {\n\t\t\tresult[resIndex++] = value;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function omit(obj, fn) {\n\tvar target = {};\n\tfor (var i in obj) {\n\t\tif (fn(i)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (!Object.prototype.hasOwnProperty.call(obj, i)) {\n\t\t\tcontinue;\n\t\t}\n\t\ttarget[i] = obj[i];\n\t}\n\treturn target;\n}\n\nexport function serializeOptions(options) {\n\tif (typeof options !== \"object\") {\n\t\treturn null;\n\t}\n\tvar cleanOptions = omit(options, function(prop) {\n\t\t\treturn prop.indexOf(\"gm_\") === 0;\n\t\t}),\n\t\tsortedOpts = Object.entries(cleanOptions)\n\t\t\t.filter(function(item) {\n\t\t\t\treturn (\n\t\t\t\t\ttypeof item[1] !== \"function\" &&\n\t\t\t\t\ttypeof item[1] !== \"object\" &&\n\t\t\t\t\titem[1] !== null &&\n\t\t\t\t\ttypeof item[1] !== \"undefined\"\n\t\t\t\t);\n\t\t\t})\n\t\t\t.sort();\n\treturn JSON.stringify(sortedOpts);\n}\n","import { omit } from \"./helpers.js\";\n\nfunction IconObject(url, fillColor, markerOpts) {\n\tthis.url = url;\n\tthis.fillColor = fillColor;\n\tthis.markerOpts = markerOpts;\n\tObject.assign(this, markerOpts);\n\tif (window && window.google && window.google.maps) {\n\t\tthis.origin = new google.maps.Point(\n\t\t\tthis.markerOpts.origin.x,\n\t\t\tthis.markerOpts.origin.y\n\t\t);\n\t\tthis.anchor = new google.maps.Point(\n\t\t\tthis.markerOpts.anchor.x,\n\t\t\tthis.markerOpts.anchor.y\n\t\t);\n\t\tthis.size = new google.maps.Size(\n\t\t\tthis.markerOpts.size.width,\n\t\t\tthis.markerOpts.size.height\n\t\t);\n\t\tthis.scaledSize = new google.maps.Size(\n\t\t\tthis.markerOpts.scaledSize.width,\n\t\t\tthis.markerOpts.size.height\n\t\t);\n\t}\n\treturn this;\n}\n\nIconObject.prototype.toJSON = function() {\n\tvar serialized = omit(this.markerOpts, function(prop) {\n\t\treturn prop.indexOf(\"gm_\") === 0 || prop === \"url\";\n\t});\n\tserialized.fillColor = this.fillColor;\n\treturn serialized;\n};\n\nexport { IconObject };\n","/** global: google, r, g, b */\n\nimport { hslaString, rgbaString, parseHalf, compact } from \"./helpers.js\";\n\nexport function parseHex(hexstring, opacity, darkenfactor) {\n    let hexcolor = {\n        hex: hexstring\n    };\n    darkenfactor = darkenfactor || 1;\n\n    hexstring = hexstring.replace(\"#\", \"\");\n    if (hexstring.length === 3) {\n        hexstring =\n            hexstring[0] +\n            hexstring[0] +\n            hexstring[1] +\n            hexstring[1] +\n            hexstring[2] +\n            hexstring[2];\n    }\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    hexcolor.r = parseInt(\n        darkenfactor * parseInt(hexstring.substring(0, 2), 16),\n        10\n    );\n    hexcolor.g = parseInt(\n        darkenfactor * parseInt(hexstring.substring(2, 4), 16),\n        10\n    );\n    hexcolor.b = parseInt(\n        darkenfactor * parseInt(hexstring.substring(4, 6), 16),\n        10\n    );\n    hexcolor.a = opacity;\n    hexcolor.fillColor = rgbaString(hexcolor);\n    hexcolor.strokeColor = [\n        \"rgba(\" + parseHalf(hexcolor.r),\n        parseHalf(hexcolor.g),\n        parseHalf(hexcolor.b),\n        hexcolor.a + \")\"\n    ].join(\",\");\n    hexcolor.rgb = hexcolor.fillColor;\n    return hexcolor;\n}\n\nexport function parseHSL(hslstring, opacity) {\n    let hslcolor = {},\n        hslcolor_stroke = {},\n        hslparts = compact(hslstring.split(/hsla?\\(|,|\\)|%/));\n\n    if (hslparts[3] === undefined) {\n        hslparts[3] = 1;\n    }\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    hslcolor.h = hslcolor_stroke.h = parseFloat(hslparts[0], 10);\n    hslcolor.s = hslcolor_stroke.s = parseFloat(hslparts[1], 10);\n    hslcolor.l = parseFloat(hslparts[2], 10);\n    hslcolor.a = hslcolor_stroke.a = parseFloat(opacity * hslparts[3], 10);\n    hslcolor_stroke.l = parseInt(hslcolor.l / 2, 10);\n\n    hslcolor.fillColor = hslaString(hslcolor);\n    hslcolor.strokeColor = hslaString(hslcolor_stroke);\n    hslcolor.hsl = hslcolor.fillColor;\n    return hslcolor;\n}\n\nexport function parseRGB(rgbstring, opacity, darkenfactor) {\n    let rgbcolor = {},\n        rgbparts = compact(rgbstring.split(/rgba?\\(|,|\\)/));\n\n    darkenfactor = darkenfactor || 1;\n\n    if (rgbparts[3] === undefined) {\n        rgbparts[3] = 1;\n    }\n\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    rgbcolor.r = parseInt(darkenfactor * (parseInt(rgbparts[0], 10) % 256), 10);\n    rgbcolor.g = parseInt(darkenfactor * (parseInt(rgbparts[1], 10) % 256), 10);\n    rgbcolor.b = parseInt(darkenfactor * (parseInt(rgbparts[2], 10) % 256), 10);\n    rgbcolor.a = parseFloat(opacity * rgbparts[3], 10);\n    rgbcolor.fillColor = rgbaString(rgbcolor);\n    rgbcolor.strokeColor =\n        \"rgba(\" +\n        rgbcolor.r / 2 +\n        \",\" +\n        rgbcolor.g / 2 +\n        \",\" +\n        rgbcolor.b / 2 +\n        \",\" +\n        rgbcolor.a +\n        \")\";\n    rgbcolor.rgb = rgbcolor.fillColor;\n    return rgbcolor;\n}\n\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n\nexport function hslToRGB(h, s, l, a, darkenfactor) {\n    let r, g, b;\n\n    darkenfactor = darkenfactor || 1;\n    h = parseFloat(h, 10) / 360;\n    s = parseFloat(s, 10) / 100;\n    l = parseFloat(l, 10) / 100;\n    if (a === undefined) {\n        a = 1;\n    }\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        let p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    if (a === undefined) {\n        a = 1;\n    }\n\n    let rgb = {\n        r: Math.round(r * 255 * darkenfactor),\n        g: Math.round(g * 255 * darkenfactor),\n        b: Math.round(b * 255 * darkenfactor),\n        a: parseFloat(a, 10)\n    };\n\n    rgb.fillColor = rgbaString(rgb);\n\n    return rgb;\n}\n\nexport function rgbToHSL(in_r, in_g, in_b, in_a) {\n    let h,\n        r = (in_r % 256) / 255,\n        g = (in_g % 256) / 255,\n        b = (in_b % 256) / 255,\n        a = in_a === undefined ? 1 : in_a,\n        max = Math.max(r, g, b),\n        min = Math.min(r, g, b),\n        sum = max + min,\n        diff = max - min,\n        s = sum > 1 ? diff / (2 - sum) : diff / sum;\n\n    switch (max) {\n        case r:\n            h = (g - b) / diff + (g < b ? 6 : 0);\n            break;\n        case g:\n            h = (b - r) / diff + 2;\n            break;\n        case b:\n            h = (r - g) / diff + 4;\n            break;\n        default:\n            h = 0;\n            break;\n    }\n\n    h /= 6;\n\n    if (diff === 0) {\n        h = s = 0; // achromatic\n    }\n\n    let hsl = {\n        h: Math.round(360 * h),\n        s: Math.round(100 * s),\n        l: Math.round(50 * sum),\n        a: Math.round(100 * a) / 100\n    };\n\n    hsl.fillColor = hslaString(hsl);\n\n    return hsl;\n}\n\nfunction toDecColor(stringcolor) {\n    let parsedcolor = {};\n    if (!stringcolor) {\n        parsedcolor.fillColor = \"rgba(100,250,50,0.99)\";\n    } else if (stringcolor.indexOf(\"rgb\") !== -1) {\n        parsedcolor = parseRGB(stringcolor);\n    } else if (stringcolor.indexOf(\"hsl\") !== -1) {\n        parsedcolor = parseHSL(stringcolor);\n    } else {\n        parsedcolor = parseHex(stringcolor);\n    }\n\n    return parsedcolor;\n}\n\nfunction getColor(val, range) {\n    const defaults = {\n        h: Math.floor((360 / range) * val),\n        s: 78, // constant saturation\n        l: 63, // constant luminance\n        a: 1\n    };\n\n    return hslaString(defaults);\n}\n\nfunction getColor1() {\n    const defaults1 = {\n        h: 1,\n        s: 78, // constant saturation\n        l: 33, // constant luminance\n        a: 1\n    };\n    return hslaString(defaults1);\n}\n\nfunction darken(stringcolor, factor) {\n    const darkercolor = {};\n    if (!factor) {\n        factor = 1;\n    }\n    if (stringcolor.fillColor.indexOf(\"rgb\") !== -1) {\n        darkercolor.r = factor * parseHalf(stringcolor.r);\n        darkercolor.g = factor * parseHalf(stringcolor.g);\n        darkercolor.b = factor * parseHalf(stringcolor.b);\n        darkercolor.a = 0.99;\n        darkercolor.fillColor = rgbaString(darkercolor);\n    } else if (stringcolor.fillColor.indexOf(\"hsl\") !== -1) {\n        darkercolor.h = stringcolor.h;\n        darkercolor.s = stringcolor.s;\n        darkercolor.l = factor * stringcolor.l - 30;\n        darkercolor.fillColor = hslaString(darkercolor);\n    }\n\n    return darkercolor;\n}\n\nexport function getColors(options) {\n    let color0, color1;\n    if (options.index !== undefined && options.count > 0) {\n        color0 = getColor(options.index, options.count);\n        color1 = getColor1();\n    } else {\n        let deccolor = toDecColor(options.color);\n        color0 = deccolor.fillColor;\n        color1 = darken(deccolor).fillColor;\n    }\n    return [color0, color1];\n}\n","/** global: google, r, g, b */\n\nimport { IconObject } from \"./icon_object.js\";\n\nimport { createClusterIcon } from \"./create_cluster_icon.js\";\nimport { createTextMarker } from \"./create_text_marker.js\";\n\nimport { createFatMarkerIcon } from \"./create_fat_marker_icon.js\";\n\nimport { createGroupedIcon } from \"./create_grouped_icon.js\";\n\nimport { createTransparentMarkerIcon } from \"./create_transparent_marker_icon.js\";\n\nimport { parseHex, parseHSL, parseRGB, hslToRGB, rgbToHSL } from \"./parsers.js\";\n\nimport { omit, serializeOptions } from \"./helpers.js\";\n\nfunction padHex(str_in) {\n    if ((\"\" + str_in).length === 1) {\n        return \"0\" + String(str_in);\n    } else {\n        return String(str_in);\n    }\n}\n\nconst MarkerFactory = {\n    createTransparentMarkerIcon: createTransparentMarkerIcon,\n    createFatMarkerIcon: createFatMarkerIcon,\n    createTextMarker: createTextMarker,\n    createClusterIcon: createClusterIcon,\n    createGroupedIcon: createGroupedIcon,\n\n    readCache: function(cacheKey, options) {\n        if (options.no_cache) {\n            return null;\n        }\n\n        var cached = window.sessionStorage.getItem(cacheKey);\n        if (cached === null) {\n            return null;\n        }\n\n        var cachedObj = JSON.parse(cached);\n        var iconObj = new IconObject(\n            cachedObj.url,\n            cachedObj.fillColor,\n            omit(cachedObj, function(key) {\n                return [\"url\", \"fillColor\"].indexOf(key) !== -1;\n            })\n        );\n        return iconObj;\n    },\n\n    setCache: function(cacheKey, iconObj) {\n        var cached = iconObj.toJSON();\n        cached.url = iconObj.url;\n        window.sessionStorage.setItem(cacheKey, JSON.stringify(cached));\n        return iconObj;\n    },\n\n    generateAutoicon: function(options) {\n        var generatorFN;\n\n        if (!options.is_icon) {\n            options.type = \"textmarker\";\n            generatorFN = MarkerFactory.createTextMarker;\n        } else if (options.shadow || options.type === \"grouped\") {\n            options.type = \"grouped\";\n            generatorFN = MarkerFactory.createGroupedIcon;\n        } else if (options.transparent_background) {\n            options.type = \"transparent\";\n            generatorFN = MarkerFactory.createTransparentMarkerIcon;\n        } else {\n            generatorFN = MarkerFactory.createFatMarkerIcon;\n            options.type = \"fatmarker\";\n        }\n        var cacheKey = serializeOptions(options);\n        var iconObj = MarkerFactory.readCache(cacheKey, options);\n        if (iconObj === null) {\n            iconObj = generatorFN(options);\n        }\n        if (options.no_cache) {\n            return iconObj;\n        }\n        return MarkerFactory.setCache(cacheKey, iconObj);\n    },\n    /**\n     * Receives a color string rgb(a), hsl(a) or hex, returns its components\n     * in rgba and hsla, with optional transparency\n     * plus a darkened version (default is half of each RGB component) and a\n     *\n     * @param {string} somecolor    - A color string in  rgb(a), hsl(a) or hex format\n     * @param {Number} opacity      - Opacity to apply to the color. Optional, default 1\n     * @param {Number} darkenfactor - How much darker should the resulting color be. Optional, default 1\n     *\n     * @return     {Object}  input color parsed and modified as requested\n     */\n    parseColorString: function(somecolor, opacity, darkenfactor) {\n        let parsedcolor = {\n                original: somecolor\n            },\n            hsl,\n            rgb;\n\n        darkenfactor = darkenfactor || 1;\n        opacity = isNaN(parseFloat(opacity, 10)) ? 1 : parseFloat(opacity, 10);\n\n        if (somecolor.indexOf(\"hsl\") !== -1) {\n            hsl = parseHSL(somecolor, opacity);\n            rgb = hslToRGB(hsl.h, hsl.s, hsl.l, hsl.a, darkenfactor);\n        } else if (somecolor.indexOf(\"rgb\") !== -1) {\n            rgb = parseRGB(somecolor, opacity, darkenfactor);\n        } else {\n            rgb = parseHex(somecolor, opacity, darkenfactor);\n        }\n\n        hsl = rgbToHSL(rgb.r, rgb.g, rgb.b, rgb.a);\n\n        parsedcolor.hsl = {\n            h: hsl.h,\n            s: hsl.s,\n            l: hsl.l,\n            a: hsl.a\n        };\n        parsedcolor.rgb = {\n            r: rgb.r,\n            g: rgb.g,\n            b: rgb.b,\n            a: rgb.a\n        };\n\n        parsedcolor.fillColor = rgb.fillColor;\n        parsedcolor.rgba = rgb.fillColor;\n        parsedcolor.hsla = hsl.fillColor;\n        parsedcolor.strokeColor = rgb.strokeColor;\n        parsedcolor.hex = [\n            \"#\",\n            padHex(rgb.r.toString(16)),\n            padHex(rgb.g.toString(16)),\n            padHex(rgb.b.toString(16)),\n            rgb.a === 0 ? \"00\" : \"\"\n        ].join(\"\");\n        return parsedcolor;\n    },\n\n    /**\n     * Generates an google maps marker (or an image as dataurl from the given options)\n     *\n     * @param      {Object}  options  The options\n     * @return     {Object}  { description_of_the_return_value }\n     */\n    autoIcon: function(options) {\n        if (typeof options !== \"object\") {\n            console.warn(\"autoIcon expects an object as its only parameter\");\n            return null;\n        }\n        // unless explicitly set to false, the icon doesn't have a marker-like wrapper\n        options.transparent_background =\n            options.transparent_background !== false;\n\n        options.label = String(options.label || \"A\");\n        options.color = options.color || \"#FF0000\";\n\n        if (\n            options.label.length === 4 ||\n            options.label.substring(0, 2) === \"0x\"\n        ) {\n            options.font = options.font || \"fontello\";\n            options.label = (options.label || \"e836\").slice(-4);\n            options.unicodelabel = String.fromCharCode(\"0x\" + options.label);\n            options.scale = options.scale || 1;\n            options.is_icon = true;\n\n            return MarkerFactory.generateAutoicon(options);\n        } else if (options.shadow) {\n            console.log(\"createClusterIcon\", JSON.stringify(options));\n\n            return MarkerFactory.createClusterIcon(options);\n        } else {\n            options.scale = options.scale || 0.75;\n            options.label = String(options.label || \"A\");\n            options.fontsize = options.fontsize || 11;\n            options.font = options.font || \"Arial\";\n            // This is text I should print literally\n\n            return MarkerFactory.generateAutoicon(options);\n        }\n    }\n};\n\nexport { MarkerFactory };\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nconst generateClusterCanvas = function(options) {\n    let canvas = options.canvas || document.createElement(\"canvas\"),\n        anchorX = 27,\n        anchorY = 53,\n        radius = anchorX - 9,\n        color1,\n        font = options.font || \"fontello\",\n        fontsize = options.fontsize || 14,\n        context = canvas.getContext(\"2d\");\n\n    canvas.width = anchorX * 2;\n    canvas.height = anchorY + 1;\n\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    context.moveTo(anchorX, anchorY);\n\n    let labelvalue = parseInt(options.label, 10);\n    if (labelvalue < 10) {\n        color1 = \"orange\";\n        fontsize = 14;\n    } else if (labelvalue < 30) {\n        color1 = \"red\";\n        fontsize = 15;\n    } else {\n        color1 = \"purple\";\n        fontsize = 16;\n    }\n    if (labelvalue > 99) {\n        radius = radius + 3;\n        context.setLineDash([5, 5]);\n        context.beginPath();\n        context.arc(\n            anchorX,\n            2 + 0.5 * anchorY,\n            radius + 7,\n            0,\n            2 * Math.PI,\n            false\n        );\n        context.fillStyle = \"transparent\";\n        context.strokeStyle = color1;\n        context.lineWidth = 2;\n        context.fill();\n        context.stroke();\n    }\n\n    context.setLineDash([5, 5]);\n    context.beginPath();\n    context.arc(anchorX, 2 + 0.5 * anchorY, radius + 2, 0, 2 * Math.PI, false);\n    context.fillStyle = \"transparent\";\n    context.strokeStyle = color1;\n    context.lineWidth = 2;\n    context.fill();\n    context.stroke();\n\n    // Círculo blanco\n    context.setLineDash([5, 0]);\n    context.beginPath();\n    context.arc(anchorX, 2 + 0.5 * anchorY, radius - 3, 0, 2 * Math.PI, false);\n    context.fillStyle = \"white\";\n    context.strokeStyle = color1;\n    context.lineWidth = 4;\n    context.fill();\n    context.stroke();\n\n    context.beginPath();\n\n    context.font = \"normal normal normal \" + fontsize + \"px \" + font;\n    console.log(\"context font\", context.font);\n    context.fillStyle = \"#333\";\n    context.textBaseline = \"top\";\n\n    let textWidth = context.measureText(options.label),\n        text_x = options.label,\n        label_x = Math.floor(canvas.width / 2 - textWidth.width / 2),\n        label_y = 1 + Math.floor(canvas.height / 2 - fontsize / 2);\n\n    // centre the text.\n    context.fillText(text_x, label_x, label_y);\n\n    return canvas;\n};\nfunction createClusterIcon(theoptions) {\n    theoptions.scale = theoptions.scale || 1;\n    let markerCanvas = generateClusterCanvas(theoptions),\n        markerOpts = {},\n        scale = theoptions.scale;\n\n    Object.assign(markerOpts, theoptions);\n\n    Object.assign(markerOpts, {\n        origin: { x: 0, y: 0 },\n        anchor: { x: 27 * scale, y: 24 * scale },\n        size: { width: 54, height: 48 },\n        scaledSize: { width: 54 * scale, height: 48 * scale }\n    });\n\n    let url = markerCanvas.toDataURL(),\n        fillColor = markerCanvas.fillColor,\n        iconObj = new IconObject(url, fillColor, markerOpts);\n\n    return iconObj;\n}\n\nexport { createClusterIcon };\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nimport { getColors } from \"./parsers.js\";\nconst generateCanvas = function(options) {\n    let canvas = document.createElement(\"canvas\");\n    let ancho = 30,\n        alto = 40;\n    canvas.width = ancho + 18;\n    canvas.height = alto;\n    let x = canvas.width / 2,\n        y = canvas.height - 2,\n        radius = ancho / 2,\n        angulo = 0.6;\n\n    let font = \"'\" + options.font + \"'\" || \"Arial\";\n    let fontsize = options.fontsize || 11;\n\n    let context = canvas.getContext(\"2d\");\n\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    let radius0 = 2 * radius,\n        cx = x + 0.95 * radius0,\n        cy = y + 0.45 * radius0;\n\n    let grad = context.createLinearGradient(0, 0, 0, canvas.height),\n        colors = getColors(options),\n        color0 = colors[0],\n        color1 = colors[1];\n\n    grad.addColorStop(0, color0);\n    grad.addColorStop(1, color1);\n\n    context.fillStyle = grad;\n    context.strokeStyle = \"rgba(200,200,200,0.7)\";\n\n    context.beginPath();\n\n    //arco izquierdo\n    context.arc(\n        cx - 1,\n        cy,\n        radius0,\n        (9 * Math.PI) / 8,\n        (-6 * Math.PI) / 8,\n        false\n    );\n\n    // arco superior\n    context.arc(x, (y - 7) / 2, radius, angulo, Math.PI - angulo, true);\n\n    //arco derecho\n    context.arc(\n        2 * x - cx + 1,\n        cy,\n        radius0,\n        (-0.95 * Math.PI) / 3,\n        -Math.PI / 8,\n        false\n    );\n    context.fill();\n    context.stroke();\n\n    context.beginPath();\n    context.arc(x, 0.4 * y, (2 * radius) / 3, 0, 2 * Math.PI, false);\n    context.fillStyle = \"white\";\n    context.fill();\n\n    context.beginPath();\n\n    // Render Label\n    //context.font = \"11pt Arial\";\n    context.font = fontsize + \"pt \" + font;\n    context.textBaseline = \"top\";\n\n    let textWidth = context.measureText(options.label);\n\n    if (textWidth.width > ancho || String(options.label).length > 3) {\n        context.rect(\n            x - 2 - textWidth.width / 2,\n            y - 30,\n            x - 2 + textWidth.width / 2,\n            y - 23\n        );\n        context.fillStyle = \"#F7F0F0\";\n        context.fill();\n        context.stroke();\n    }\n\n    context.fillStyle = \"black\";\n    context.strokeStyle = \"black\";\n    // centre the text.\n    context.fillText(\n        options.label,\n        1 + Math.floor(canvas.width / 2 - textWidth.width / 2),\n        8\n    );\n    canvas.fillColor = color0;\n\n    return canvas;\n};\nexport function createTextMarker(theoptions) {\n    let scale = theoptions.scale || 0.75,\n        markerCanvas = generateCanvas(theoptions),\n        markerOpts = {};\n\n    theoptions.type = \"textmarker\";\n\n    Object.assign(markerOpts, theoptions);\n\n    Object.assign(markerOpts, {\n        origin: { x: 0, y: 0 },\n        anchor: { x: 24 * scale, y: 40 * scale },\n        size: { width: 48, height: 40 },\n        scaledSize: { width: 48 * scale, height: 40 * scale }\n    });\n\n    let url = markerCanvas.toDataURL(),\n        fillColor = markerCanvas.fillColor,\n        iconObj = new IconObject(url, fillColor, markerOpts);\n\n    return iconObj;\n}\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nimport { getColors } from \"./parsers.js\";\nconst generateFatCanvas = function(options) {\n\tlet canvas = options.canvas || document.createElement(\"canvas\"),\n\t\tanchorX = 27,\n\t\tanchorY = 53,\n\t\tradius = anchorX - 9,\n\t\tangulo = 1.1,\n\t\tfont = options.font || \"fontello\",\n\t\tfontsize = options.fontsize || 14,\n\t\tcontext = canvas.getContext(\"2d\"),\n\t\tgrad = context.createLinearGradient(0, 0, 0, anchorY);\n\n\tcanvas.width = anchorX * 2;\n\tcanvas.height = anchorY + 1;\n\n\tlet colors = getColors(options),\n\t\tcolor0 = colors[0],\n\t\tcolor1 = colors[1];\n\n\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\n\tgrad.addColorStop(0, color0);\n\tgrad.addColorStop(1, color1);\n\n\tcontext.fillStyle = grad;\n\tcontext.strokeStyle = color1;\n\tcontext.beginPath();\n\n\tcontext.moveTo(anchorX, anchorY);\n\n\t// arco superior\n\tcontext.arc(\n\t\tanchorX,\n\t\t2 + 0.5 * anchorY,\n\t\tradius,\n\t\tangulo,\n\t\tMath.PI - angulo,\n\t\ttrue\n\t);\n\n\t//punta inferior\n\tcontext.lineTo(anchorX, anchorY);\n\n\tcontext.fill();\n\tcontext.stroke();\n\n\t// Círculo blanco\n\tcontext.beginPath();\n\tcontext.arc(anchorX, 2 + 0.5 * anchorY, radius - 3, 0, 2 * Math.PI, false);\n\tcontext.fillStyle = \"white\";\n\tcontext.fill();\n\n\tcontext.beginPath();\n\n\tcontext.font = \"normal normal normal \" + fontsize + \"px \" + font;\n\t//console.log('context font', context.font);\n\tcontext.fillStyle = color1;\n\tcontext.textBaseline = \"top\";\n\n\tlet textWidth = context.measureText(options.unicodelabel),\n\t\ttext_x = options.unicodelabel,\n\t\tlabel_x = Math.floor(canvas.width / 2 - textWidth.width / 2),\n\t\tlabel_y = 1 + Math.floor(canvas.height / 2 - fontsize / 2);\n\n\t// centre the text.\n\tcontext.fillText(text_x, label_x, label_y);\n\tcanvas.fillColor = color0;\n\treturn canvas;\n};\n\nexport function createFatMarkerIcon(theoptions) {\n\tlet scale = theoptions.scale || 1,\n\t\tmarkerCanvas = generateFatCanvas(theoptions),\n\t\tmarkerOpts = {};\n\n\ttheoptions.type = \"fatmarker\";\n\n\tObject.assign(markerOpts, theoptions);\n\n\tObject.assign(markerOpts, {\n\t\torigin: { x: 0, y: 0 },\n\t\tanchor: { x: 21 * scale, y: 36 * scale },\n\t\tsize: { width: 54, height: 48 },\n\t\tscaledSize: { width: 42 * scale, height: 36 * scale },\n\t\tscale: scale\n\t});\n\n\tlet url = markerCanvas.toDataURL(),\n\t\tfillColor = markerCanvas.fillColor,\n\t\ticonObj = new IconObject(url, fillColor, markerOpts);\n\treturn iconObj;\n}\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nimport { getColors } from \"./parsers.js\";\nconst generateGroupedCanvas = function(options) {\n    let text_x,\n        canvas = options.canvas || document.createElement(\"canvas\"),\n        context = canvas.getContext(\"2d\"),\n        font = options.font || \"fontello\",\n        fontsize = options.fontsize || 26;\n\n    canvas.width = 54;\n    canvas.height = 48;\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    let colors = getColors(options),\n        color0 = colors[0];\n    context.beginPath();\n\n    context.font = \"normal normal normal \" + fontsize + \"px \" + font;\n\n    context.textBaseline = \"top\";\n    let textWidth = context.measureText(options.unicodelabel);\n    text_x = Math.floor(canvas.width / 2 - textWidth.width / 2);\n\n    context.shadowOffsetX = -2;\n    context.shadowOffsetY = -2;\n    context.shadowBlur = 0;\n\n    context.fillStyle = \"#FFFFFF\";\n    context.shadowColor = \"#666666\";\n\n    context.fillText(options.unicodelabel, text_x - 4, 2);\n    context.fillText(options.unicodelabel, text_x, 5);\n    context.fillStyle = color0;\n    context.fillText(options.unicodelabel, text_x + 4, 8);\n\n    context.strokeStyle = \"#FFFFFF\";\n    context.strokeText(options.unicodelabel, text_x + 4, 8);\n\n    canvas.fillColor = color0;\n\n    return canvas;\n};\n\nexport function createGroupedIcon(theoptions) {\n    theoptions.scale = theoptions.scale || 1;\n    theoptions.fontsize = theoptions.fontsize || 26;\n\n    let markerCanvas = generateGroupedCanvas(theoptions),\n        markerOpts = {};\n\n    let scale = theoptions.scale;\n\n    theoptions.type = \"transparent\";\n\n    Object.assign(markerOpts, theoptions);\n\n    Object.assign(markerOpts, {\n        origin: { x: 0, y: 0 },\n        anchor: { x: 27 * scale, y: 24 * scale },\n        size: { width: 54, height: 48 },\n        scaledSize: { width: 54 * scale, height: 48 * scale }\n    });\n\n    let url = markerCanvas.toDataURL(),\n        fillColor = markerCanvas.fillColor,\n        iconObj = new IconObject(url, fillColor, markerOpts);\n\n    return iconObj;\n}\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nimport { getColors } from \"./parsers.js\";\nconst generateTransparentCanvas = function(options) {\n    let text_x,\n        canvas = options.canvas || document.createElement(\"canvas\"),\n        context = canvas.getContext(\"2d\"),\n        font = options.font || \"fontello\",\n        fontsize = options.fontsize || 26;\n\n    canvas.width = 54;\n    canvas.height = 48;\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    let colors = getColors(options),\n        color0 = colors[0],\n        color1 = colors[1];\n    context.beginPath();\n\n    context.font = \"normal normal normal \" + (fontsize - 3) + \"px \" + font;\n\n    context.textBaseline = \"top\";\n    let textmetric = context.measureText(options.unicodelabel);\n    text_x = Math.floor(canvas.width / 2 - textmetric.width / 2);\n\n    //console.debug('textmetric', textmetric);\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 0;\n    context.shadowColor = \"#FFFFFF\";\n    context.fillStyle = color0;\n    context.fillText(options.unicodelabel, text_x + 1, 6);\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 1;\n    context.shadowColor = \"#FFFFFF\";\n    context.strokeStyle = color1;\n    context.strokeText(options.unicodelabel, text_x + 1, 6);\n\n    canvas.fillColor = color0;\n\n    return canvas;\n};\n\nexport function createTransparentMarkerIcon(theoptions) {\n    theoptions.scale = theoptions.scale || 1;\n    theoptions.fontsize = theoptions.fontsize || 26;\n\n    let markerCanvas = generateTransparentCanvas(theoptions),\n        markerOpts = {};\n\n    let scale = theoptions.scale;\n\n    theoptions.type = \"transparent\";\n\n    Object.assign(markerOpts, theoptions);\n\n    Object.assign(markerOpts, {\n        origin: { x: 0, y: 0 },\n        anchor: { x: 27 * scale, y: 24 * scale },\n        size: { width: 54, height: 48 },\n        scaledSize: { width: 54 * scale, height: 48 * scale }\n    });\n\n    let url = markerCanvas.toDataURL(),\n        fillColor = markerCanvas.fillColor,\n        iconObj = new IconObject(url, fillColor, markerOpts);\n\n    return iconObj;\n}\n"],"names":["hslaString","hslcolor","undefined","a","h","s","l","parseFloat","rgbaString","hexcolor","r","g","b","parseHalf","foo","parseInt","compact","array","index","length","resIndex","result","value","omit","obj","fn","target","i","Object","prototype","hasOwnProperty","call","IconObject","url","fillColor","markerOpts","this","assign","window","google","maps","origin","Point","x","y","anchor","size","Size","width","height","scaledSize","parseHex","hexstring","opacity","darkenfactor","hex","replace","isNaN","substring","strokeColor","join","rgb","parseHSL","hslstring","hslcolor_stroke","hslparts","split","hsl","parseRGB","rgbstring","rgbcolor","rgbparts","hue2rgb","p","q","t","getColors","options","color0","color1","count","val","range","Math","floor","getColor","deccolor","stringcolor","parsedcolor","indexOf","toDecColor","color","factor","darkercolor","darken","padHex","str_in","String","toJSON","serialized","prop","generateClusterCanvas","canvas","document","createElement","radius","anchorX","font","fontsize","context","getContext","anchorY","clearRect","moveTo","labelvalue","label","setLineDash","beginPath","arc","PI","fillStyle","strokeStyle","lineWidth","fill","stroke","textBaseline","textWidth","measureText","text_x","label_x","label_y","fillText","generateCanvas","ancho","cx","cy","grad","createLinearGradient","colors","addColorStop","rect","generateFatCanvas","lineTo","unicodelabel","generateGroupedCanvas","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","strokeText","generateTransparentCanvas","textmetric","MarkerFactory","createTransparentMarkerIcon","theoptions","scale","markerCanvas","type","toDataURL","createFatMarkerIcon","createTextMarker","createClusterIcon","createGroupedIcon","readCache","cacheKey","no_cache","cached","sessionStorage","getItem","cachedObj","JSON","parse","key","setCache","iconObj","setItem","stringify","generateAutoicon","generatorFN","is_icon","shadow","transparent_background","cleanOptions","sortedOpts","entries","filter","item","sort","serializeOptions","parseColorString","somecolor","original","round","hslToRGB","in_r","in_g","in_b","in_a","max","min","sum","diff","rgbToHSL","rgba","hsla","toString","autoIcon","console","warn","slice","fromCharCode"],"mappings":"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"}