{"version":3,"file":"markerfactory.min.js","sources":["../src/helpers.js","../src/icon_object.js","../src/parsers.js","../src/markerfactory.js","../src/create_cluster_icon.js","../src/create_text_marker.js","../src/create_fat_marker_icon.js","../src/create_grouped_icon.js","../src/create_transparent_marker_icon.js"],"sourcesContent":["export function hslaString(hslcolor) {\n\tif (hslcolor.a !== undefined) {\n\t\treturn (\n\t\t\t\"hsla(\" +\n\t\t\thslcolor.h +\n\t\t\t\",\" +\n\t\t\thslcolor.s +\n\t\t\t\"%,\" +\n\t\t\thslcolor.l +\n\t\t\t\"%,\" +\n\t\t\tparseFloat(hslcolor.a, 10) +\n\t\t\t\")\"\n\t\t);\n\t}\n\treturn \"hsl(\" + hslcolor.h + \",\" + hslcolor.s + \"%,\" + hslcolor.l + \"%)\";\n}\n\nexport function rgbaString(hexcolor) {\n\tif (hexcolor.a !== undefined) {\n\t\treturn (\n\t\t\t\"rgba(\" +\n\t\t\thexcolor.r +\n\t\t\t\",\" +\n\t\t\thexcolor.g +\n\t\t\t\",\" +\n\t\t\thexcolor.b +\n\t\t\t\",\" +\n\t\t\tparseFloat(hexcolor.a, 10) +\n\t\t\t\")\"\n\t\t);\n\t}\n\treturn \"rgb(\" + hexcolor.r + \",\" + hexcolor.g + \",\" + hexcolor.b + \")\";\n}\n\nexport function parseHalf(foo) {\n\treturn parseInt(foo / 2, 10);\n}\n\nexport function compact(array) {\n\tlet index = -1,\n\t\tlength = array ? array.length : 0,\n\t\tresIndex = 0,\n\t\tresult = [];\n\n\twhile (++index < length) {\n\t\tlet value = array[index];\n\t\tif (value) {\n\t\t\tresult[resIndex++] = value;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function omit(obj, fn) {\n\tvar target = {};\n\tfor (var i in obj) {\n\t\tif (fn(i)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (!Object.prototype.hasOwnProperty.call(obj, i)) {\n\t\t\tcontinue;\n\t\t}\n\t\ttarget[i] = obj[i];\n\t}\n\treturn target;\n}\n\nexport function serializeOptions(options) {\n\tif (typeof options !== \"object\") {\n\t\treturn null;\n\t}\n\tvar cleanOptions = omit(options, function(prop) {\n\t\t\treturn prop.indexOf(\"gm_\") === 0;\n\t\t}),\n\t\tsortedOpts = Object.entries(cleanOptions)\n\t\t\t.filter(function(item) {\n\t\t\t\treturn (\n\t\t\t\t\ttypeof item[1] !== \"function\" &&\n\t\t\t\t\ttypeof item[1] !== \"object\" &&\n\t\t\t\t\titem[1] !== null &&\n\t\t\t\t\ttypeof item[1] !== \"undefined\"\n\t\t\t\t);\n\t\t\t})\n\t\t\t.sort();\n\treturn JSON.stringify(sortedOpts);\n}\n","import { omit } from \"./helpers.js\";\n\nfunction IconObject(url, fillColor, markerOpts) {\n\tthis.url = url;\n\tthis.fillColor = fillColor;\n\tthis.markerOpts = markerOpts;\n\tObject.assign(this, markerOpts);\n\treturn this;\n}\n\nIconObject.prototype.toJSON = function() {\n\tvar serialized = omit(this.markerOpts, function(prop) {\n\t\treturn prop.indexOf(\"gm_\") === 0 || prop === \"url\";\n\t});\n\tserialized.fillColor = this.fillColor;\n\treturn serialized;\n};\n\nexport { IconObject };\n","/** global: google, r, g, b */\n\nimport { hslaString, rgbaString, parseHalf, compact } from \"./helpers.js\";\n\nexport function parseHex(hexstring, opacity, darkenfactor) {\n    let hexcolor = {\n        hex: hexstring\n    };\n    darkenfactor = darkenfactor || 1;\n\n    hexstring = hexstring.replace(\"#\", \"\");\n    if (hexstring.length === 3) {\n        hexstring =\n            hexstring[0] +\n            hexstring[0] +\n            hexstring[1] +\n            hexstring[1] +\n            hexstring[2] +\n            hexstring[2];\n    }\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    hexcolor.r = parseInt(\n        darkenfactor * parseInt(hexstring.substring(0, 2), 16),\n        10\n    );\n    hexcolor.g = parseInt(\n        darkenfactor * parseInt(hexstring.substring(2, 4), 16),\n        10\n    );\n    hexcolor.b = parseInt(\n        darkenfactor * parseInt(hexstring.substring(4, 6), 16),\n        10\n    );\n    hexcolor.a = opacity;\n    hexcolor.fillColor = rgbaString(hexcolor);\n    hexcolor.strokeColor = [\n        \"rgba(\" + parseHalf(hexcolor.r),\n        parseHalf(hexcolor.g),\n        parseHalf(hexcolor.b),\n        hexcolor.a + \")\"\n    ].join(\",\");\n    hexcolor.rgb = hexcolor.fillColor;\n    return hexcolor;\n}\n\nexport function parseHSL(hslstring, opacity) {\n    let hslcolor = {},\n        hslcolor_stroke = {},\n        hslparts = compact(hslstring.split(/hsla?\\(|,|\\)|%/));\n\n    if (hslparts[3] === undefined) {\n        hslparts[3] = 1;\n    }\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    hslcolor.h = hslcolor_stroke.h = parseFloat(hslparts[0], 10);\n    hslcolor.s = hslcolor_stroke.s = parseFloat(hslparts[1], 10);\n    hslcolor.l = parseFloat(hslparts[2], 10);\n    hslcolor.a = hslcolor_stroke.a = parseFloat(opacity * hslparts[3], 10);\n    hslcolor_stroke.l = parseInt(hslcolor.l / 2, 10);\n\n    hslcolor.fillColor = hslaString(hslcolor);\n    hslcolor.strokeColor = hslaString(hslcolor_stroke);\n    hslcolor.hsl = hslcolor.fillColor;\n    return hslcolor;\n}\n\nexport function parseRGB(rgbstring, opacity, darkenfactor) {\n    let rgbcolor = {},\n        rgbparts = compact(rgbstring.split(/rgba?\\(|,|\\)/));\n\n    darkenfactor = darkenfactor || 1;\n\n    if (rgbparts[3] === undefined) {\n        rgbparts[3] = 1;\n    }\n\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    rgbcolor.r = parseInt(darkenfactor * (parseInt(rgbparts[0], 10) % 256), 10);\n    rgbcolor.g = parseInt(darkenfactor * (parseInt(rgbparts[1], 10) % 256), 10);\n    rgbcolor.b = parseInt(darkenfactor * (parseInt(rgbparts[2], 10) % 256), 10);\n    rgbcolor.a = parseFloat(opacity * rgbparts[3], 10);\n    rgbcolor.fillColor = rgbaString(rgbcolor);\n    rgbcolor.strokeColor =\n        \"rgba(\" +\n        rgbcolor.r / 2 +\n        \",\" +\n        rgbcolor.g / 2 +\n        \",\" +\n        rgbcolor.b / 2 +\n        \",\" +\n        rgbcolor.a +\n        \")\";\n    rgbcolor.rgb = rgbcolor.fillColor;\n    return rgbcolor;\n}\n\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n\nexport function hslToRGB(h, s, l, a, darkenfactor) {\n    let r, g, b;\n\n    darkenfactor = darkenfactor || 1;\n    h = parseFloat(h, 10) / 360;\n    s = parseFloat(s, 10) / 100;\n    l = parseFloat(l, 10) / 100;\n    if (a === undefined) {\n        a = 1;\n    }\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        let p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    if (a === undefined) {\n        a = 1;\n    }\n\n    let rgb = {\n        r: Math.round(r * 255 * darkenfactor),\n        g: Math.round(g * 255 * darkenfactor),\n        b: Math.round(b * 255 * darkenfactor),\n        a: parseFloat(a, 10)\n    };\n\n    rgb.fillColor = rgbaString(rgb);\n\n    return rgb;\n}\n\nexport function rgbToHSL(in_r, in_g, in_b, in_a) {\n    let h,\n        r = (in_r % 256) / 255,\n        g = (in_g % 256) / 255,\n        b = (in_b % 256) / 255,\n        a = in_a === undefined ? 1 : in_a,\n        max = Math.max(r, g, b),\n        min = Math.min(r, g, b),\n        sum = max + min,\n        diff = max - min,\n        s = sum > 1 ? diff / (2 - sum) : diff / sum;\n\n    switch (max) {\n        case r:\n            h = (g - b) / diff + (g < b ? 6 : 0);\n            break;\n        case g:\n            h = (b - r) / diff + 2;\n            break;\n        case b:\n            h = (r - g) / diff + 4;\n            break;\n        default:\n            h = 0;\n            break;\n    }\n\n    h /= 6;\n\n    if (diff === 0) {\n        h = s = 0; // achromatic\n    }\n\n    let hsl = {\n        h: Math.round(360 * h),\n        s: Math.round(100 * s),\n        l: Math.round(50 * sum),\n        a: Math.round(100 * a) / 100\n    };\n\n    hsl.fillColor = hslaString(hsl);\n\n    return hsl;\n}\n\nfunction toDecColor(stringcolor) {\n    let parsedcolor = {};\n    if (!stringcolor) {\n        parsedcolor.fillColor = \"rgba(100,250,50,0.99)\";\n    } else if (stringcolor.indexOf(\"rgb\") !== -1) {\n        parsedcolor = parseRGB(stringcolor);\n    } else if (stringcolor.indexOf(\"hsl\") !== -1) {\n        parsedcolor = parseHSL(stringcolor);\n    } else {\n        parsedcolor = parseHex(stringcolor);\n    }\n\n    return parsedcolor;\n}\n\nfunction getColor(val, range) {\n    const defaults = {\n        h: Math.floor((360 / range) * val),\n        s: 78, // constant saturation\n        l: 63, // constant luminance\n        a: 1\n    };\n\n    return hslaString(defaults);\n}\n\nfunction getColor1() {\n    const defaults1 = {\n        h: 1,\n        s: 78, // constant saturation\n        l: 33, // constant luminance\n        a: 1\n    };\n    return hslaString(defaults1);\n}\n\nfunction darken(stringcolor, factor) {\n    const darkercolor = {};\n    if (!factor) {\n        factor = 1;\n    }\n    if (stringcolor.fillColor.indexOf(\"rgb\") !== -1) {\n        darkercolor.r = factor * parseHalf(stringcolor.r);\n        darkercolor.g = factor * parseHalf(stringcolor.g);\n        darkercolor.b = factor * parseHalf(stringcolor.b);\n        darkercolor.a = 0.99;\n        darkercolor.fillColor = rgbaString(darkercolor);\n    } else if (stringcolor.fillColor.indexOf(\"hsl\") !== -1) {\n        darkercolor.h = stringcolor.h;\n        darkercolor.s = stringcolor.s;\n        darkercolor.l = factor * stringcolor.l - 30;\n        darkercolor.fillColor = hslaString(darkercolor);\n    }\n\n    return darkercolor;\n}\n\nexport function getColors(options) {\n    let color0, color1;\n    if (options.index !== undefined && options.count > 0) {\n        color0 = getColor(options.index, options.count);\n        color1 = getColor1();\n    } else {\n        let deccolor = toDecColor(options.color);\n        color0 = deccolor.fillColor;\n        color1 = darken(deccolor).fillColor;\n    }\n    return [color0, color1];\n}\n","/** global: google, r, g, b */\n\nimport { IconObject } from \"./icon_object.js\";\n\nimport { createClusterIcon } from \"./create_cluster_icon.js\";\nimport { createTextMarker } from \"./create_text_marker.js\";\n\nimport { createFatMarkerIcon } from \"./create_fat_marker_icon.js\";\n\nimport { createGroupedIcon } from \"./create_grouped_icon.js\";\n\nimport { createTransparentMarkerIcon } from \"./create_transparent_marker_icon.js\";\n\nimport { parseHex, parseHSL, parseRGB, hslToRGB, rgbToHSL } from \"./parsers.js\";\n\nimport { omit, serializeOptions } from \"./helpers.js\";\n\nfunction padHex(str_in) {\n    if ((\"\" + str_in).length === 1) {\n        return \"0\" + String(str_in);\n    } else {\n        return String(str_in);\n    }\n}\n\nconst MarkerFactory = {\n    createTransparentMarkerIcon: createTransparentMarkerIcon,\n    createFatMarkerIcon: createFatMarkerIcon,\n    createTextMarker: createTextMarker,\n    createClusterIcon: createClusterIcon,\n    createGroupedIcon: createGroupedIcon,\n\n    readCache: function(cacheKey, options) {\n        if (options.no_cache) {\n            return null;\n        }\n\n        var cached = window.sessionStorage.getItem(cacheKey);\n        if (cached === null) {\n            return null;\n        }\n\n        var cachedObj = JSON.parse(cached);\n        var iconObj = new IconObject(\n            cachedObj.url,\n            cachedObj.fillColor,\n            omit(cachedObj, function(key) {\n                return [\"url\", \"fillColor\"].indexOf(key) !== -1;\n            })\n        );\n        iconObj.cached = true;\n        return iconObj;\n    },\n\n    setCache: function(cacheKey, iconObj) {\n        var cached = iconObj.toJSON();\n        cached.url = iconObj.url;\n        window.sessionStorage.setItem(cacheKey, JSON.stringify(cached));\n        return iconObj;\n    },\n\n    generateAutoicon: function(options) {\n        var generatorFN;\n\n        if (!options.is_icon) {\n            options.type = \"textmarker\";\n            generatorFN = MarkerFactory.createTextMarker;\n        } else if (options.shadow || options.type === \"grouped\") {\n            options.type = \"grouped\";\n            generatorFN = MarkerFactory.createGroupedIcon;\n        } else if (options.transparent_background) {\n            options.type = \"transparent\";\n            generatorFN = MarkerFactory.createTransparentMarkerIcon;\n        } else {\n            generatorFN = MarkerFactory.createFatMarkerIcon;\n            options.type = \"fatmarker\";\n        }\n        var cacheKey = serializeOptions(options);\n        var iconObj = MarkerFactory.readCache(cacheKey, options);\n        if (iconObj === null) {\n            iconObj = generatorFN(options);\n            iconObj.cached = false;\n        }\n        iconObj.cacheKey = cacheKey;\n        if (options.no_cache) {\n            return iconObj;\n        }\n        return MarkerFactory.setCache(cacheKey, iconObj);\n    },\n    /**\n     * Receives a color string rgb(a), hsl(a) or hex, returns its components\n     * in rgba and hsla, with optional transparency\n     * plus a darkened version (default is half of each RGB component) and a\n     *\n     * @param {string} somecolor    - A color string in  rgb(a), hsl(a) or hex format\n     * @param {Number} opacity      - Opacity to apply to the color. Optional, default 1\n     * @param {Number} darkenfactor - How much darker should the resulting color be. Optional, default 1\n     *\n     * @return     {Object}  input color parsed and modified as requested\n     */\n    parseColorString: function(somecolor, opacity, darkenfactor) {\n        let parsedcolor = {\n                original: somecolor\n            },\n            hsl,\n            rgb;\n\n        darkenfactor = darkenfactor || 1;\n        opacity = isNaN(parseFloat(opacity, 10)) ? 1 : parseFloat(opacity, 10);\n\n        if (somecolor.indexOf(\"hsl\") !== -1) {\n            hsl = parseHSL(somecolor, opacity);\n            rgb = hslToRGB(hsl.h, hsl.s, hsl.l, hsl.a, darkenfactor);\n        } else if (somecolor.indexOf(\"rgb\") !== -1) {\n            rgb = parseRGB(somecolor, opacity, darkenfactor);\n        } else {\n            rgb = parseHex(somecolor, opacity, darkenfactor);\n        }\n\n        hsl = rgbToHSL(rgb.r, rgb.g, rgb.b, rgb.a);\n\n        parsedcolor.hsl = {\n            h: hsl.h,\n            s: hsl.s,\n            l: hsl.l,\n            a: hsl.a\n        };\n        parsedcolor.rgb = {\n            r: rgb.r,\n            g: rgb.g,\n            b: rgb.b,\n            a: rgb.a\n        };\n\n        parsedcolor.fillColor = rgb.fillColor;\n        parsedcolor.rgba = rgb.fillColor;\n        parsedcolor.hsla = hsl.fillColor;\n        parsedcolor.strokeColor = rgb.strokeColor;\n        parsedcolor.hex = [\n            \"#\",\n            padHex(rgb.r.toString(16)),\n            padHex(rgb.g.toString(16)),\n            padHex(rgb.b.toString(16)),\n            rgb.a === 0 ? \"00\" : \"\"\n        ].join(\"\");\n        return parsedcolor;\n    },\n\n    /**\n     * Generates an google maps marker (or an image as dataurl from the given options)\n     *\n     * @param      {Object}  options  The options\n     * @return     {Object}  { description_of_the_return_value }\n     */\n    autoIcon: function(options) {\n        if (typeof options !== \"object\") {\n            console.warn(\"autoIcon expects an object as its only parameter\");\n            return null;\n        }\n        // unless explicitly set to false, the icon doesn't have a marker-like wrapper\n        options.transparent_background =\n            options.transparent_background !== false;\n\n        options.label = String(options.label || \"A\");\n        options.color = options.color || \"#FF0000\";\n\n        if (\n            options.label.length === 4 ||\n            options.label.substring(0, 2) === \"0x\"\n        ) {\n            options.font = options.font || \"fontello\";\n            options.label = (options.label || \"e836\").slice(-4);\n            options.unicodelabel = String.fromCharCode(\"0x\" + options.label);\n            options.scale = options.scale || 1;\n            options.is_icon = true;\n\n            return MarkerFactory.generateAutoicon(options);\n        } else if (options.shadow) {\n            console.log(\"createClusterIcon\", JSON.stringify(options));\n\n            return MarkerFactory.createClusterIcon(options);\n        } else {\n            options.scale = options.scale || 0.75;\n            options.label = String(options.label || \"A\");\n            options.fontsize = options.fontsize || 11;\n            options.font = options.font || \"Arial\";\n            // This is text I should print literally\n\n            return MarkerFactory.generateAutoicon(options);\n        }\n    }\n};\n\nexport { MarkerFactory };\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nconst generateClusterCanvas = function(options) {\n    let canvas = options.canvas || document.createElement(\"canvas\"),\n        anchorX = 27,\n        anchorY = 53,\n        radius = anchorX - 9,\n        color1,\n        font = options.font || \"fontello\",\n        fontsize = options.fontsize || 14,\n        context = canvas.getContext(\"2d\");\n\n    canvas.width = anchorX * 2;\n    canvas.height = anchorY + 1;\n\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    context.moveTo(anchorX, anchorY);\n\n    let labelvalue = parseInt(options.label, 10);\n    if (labelvalue < 10) {\n        color1 = \"orange\";\n        fontsize = 14;\n    } else if (labelvalue < 30) {\n        color1 = \"red\";\n        fontsize = 15;\n    } else {\n        color1 = \"purple\";\n        fontsize = 16;\n    }\n    if (labelvalue > 99) {\n        radius = radius + 3;\n        context.setLineDash([5, 5]);\n        context.beginPath();\n        context.arc(\n            anchorX,\n            2 + 0.5 * anchorY,\n            radius + 7,\n            0,\n            2 * Math.PI,\n            false\n        );\n        context.fillStyle = \"transparent\";\n        context.strokeStyle = color1;\n        context.lineWidth = 2;\n        context.fill();\n        context.stroke();\n    }\n\n    context.setLineDash([5, 5]);\n    context.beginPath();\n    context.arc(anchorX, 2 + 0.5 * anchorY, radius + 2, 0, 2 * Math.PI, false);\n    context.fillStyle = \"transparent\";\n    context.strokeStyle = color1;\n    context.lineWidth = 2;\n    context.fill();\n    context.stroke();\n\n    // Círculo blanco\n    context.setLineDash([5, 0]);\n    context.beginPath();\n    context.arc(anchorX, 2 + 0.5 * anchorY, radius - 3, 0, 2 * Math.PI, false);\n    context.fillStyle = \"white\";\n    context.strokeStyle = color1;\n    context.lineWidth = 4;\n    context.fill();\n    context.stroke();\n\n    context.beginPath();\n\n    context.font = \"normal normal normal \" + fontsize + \"px \" + font;\n    console.log(\"context font\", context.font);\n    context.fillStyle = \"#333\";\n    context.textBaseline = \"top\";\n\n    let textWidth = context.measureText(options.label),\n        text_x = options.label,\n        label_x = Math.floor(canvas.width / 2 - textWidth.width / 2),\n        label_y = 1 + Math.floor(canvas.height / 2 - fontsize / 2);\n\n    // centre the text.\n    context.fillText(text_x, label_x, label_y);\n\n    return canvas;\n};\nfunction createClusterIcon(theoptions) {\n    theoptions.scale = theoptions.scale || 1;\n    let markerCanvas = generateClusterCanvas(theoptions),\n        markerOpts = {},\n        scale = theoptions.scale;\n\n    Object.assign(markerOpts, theoptions);\n\n    Object.assign(markerOpts, {\n        origin: { x: 0, y: 0 },\n        anchor: { x: 27 * scale, y: 24 * scale },\n        size: { width: 54, height: 48 },\n        scaledSize: { width: 54 * scale, height: 48 * scale }\n    });\n\n    let url = markerCanvas.toDataURL(),\n        fillColor = markerCanvas.fillColor,\n        iconObj = new IconObject(url, fillColor, markerOpts);\n\n    return iconObj;\n}\n\nexport { createClusterIcon };\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nimport { getColors } from \"./parsers.js\";\nconst generateCanvas = function(options) {\n    let canvas = document.createElement(\"canvas\");\n    let ancho = 30,\n        alto = 40;\n    canvas.width = ancho + 18;\n    canvas.height = alto;\n    let x = canvas.width / 2,\n        y = canvas.height - 2,\n        radius = ancho / 2,\n        angulo = 0.6;\n\n    let font = \"'\" + options.font + \"'\" || \"Arial\";\n    let fontsize = options.fontsize || 11;\n\n    let context = canvas.getContext(\"2d\");\n\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    let radius0 = 2 * radius,\n        cx = x + 0.95 * radius0,\n        cy = y + 0.45 * radius0;\n\n    let grad = context.createLinearGradient(0, 0, 0, canvas.height),\n        colors = getColors(options),\n        color0 = colors[0],\n        color1 = colors[1];\n\n    grad.addColorStop(0, color0);\n    grad.addColorStop(1, color1);\n\n    context.fillStyle = grad;\n    context.strokeStyle = \"rgba(200,200,200,0.7)\";\n\n    context.beginPath();\n\n    //arco izquierdo\n    context.arc(\n        cx - 1,\n        cy,\n        radius0,\n        (9 * Math.PI) / 8,\n        (-6 * Math.PI) / 8,\n        false\n    );\n\n    // arco superior\n    context.arc(x, (y - 7) / 2, radius, angulo, Math.PI - angulo, true);\n\n    //arco derecho\n    context.arc(\n        2 * x - cx + 1,\n        cy,\n        radius0,\n        (-0.95 * Math.PI) / 3,\n        -Math.PI / 8,\n        false\n    );\n    context.fill();\n    context.stroke();\n\n    context.beginPath();\n    context.arc(x, 0.4 * y, (2 * radius) / 3, 0, 2 * Math.PI, false);\n    context.fillStyle = \"white\";\n    context.fill();\n\n    context.beginPath();\n\n    // Render Label\n    //context.font = \"11pt Arial\";\n    context.font = fontsize + \"pt \" + font;\n    context.textBaseline = \"top\";\n\n    let textWidth = context.measureText(options.label);\n\n    if (textWidth.width > ancho || String(options.label).length > 3) {\n        context.rect(\n            x - 2 - textWidth.width / 2,\n            y - 30,\n            x - 2 + textWidth.width / 2,\n            y - 23\n        );\n        context.fillStyle = \"#F7F0F0\";\n        context.fill();\n        context.stroke();\n    }\n\n    context.fillStyle = \"black\";\n    context.strokeStyle = \"black\";\n    // centre the text.\n    context.fillText(\n        options.label,\n        1 + Math.floor(canvas.width / 2 - textWidth.width / 2),\n        8\n    );\n    canvas.fillColor = color0;\n\n    return canvas;\n};\nexport function createTextMarker(theoptions) {\n    let scale = theoptions.scale || 0.75,\n        markerCanvas = generateCanvas(theoptions),\n        markerOpts = {};\n\n    theoptions.type = \"textmarker\";\n\n    Object.assign(markerOpts, theoptions);\n\n    Object.assign(markerOpts, {\n        origin: { x: 0, y: 0 },\n        anchor: { x: 24 * scale, y: 40 * scale },\n        size: { width: 48, height: 40 },\n        scaledSize: { width: 48 * scale, height: 40 * scale }\n    });\n\n    let url = markerCanvas.toDataURL(),\n        fillColor = markerCanvas.fillColor,\n        iconObj = new IconObject(url, fillColor, markerOpts);\n\n    return iconObj;\n}\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nimport { getColors } from \"./parsers.js\";\nconst generateFatCanvas = function(options) {\n\tlet canvas = options.canvas || document.createElement(\"canvas\"),\n\t\tanchorX = 27,\n\t\tanchorY = 53,\n\t\tradius = anchorX - 9,\n\t\tangulo = 1.1,\n\t\tfont = options.font || \"fontello\",\n\t\tfontsize = options.fontsize || 14,\n\t\tcontext = canvas.getContext(\"2d\"),\n\t\tgrad = context.createLinearGradient(0, 0, 0, anchorY);\n\n\tcanvas.width = anchorX * 2;\n\tcanvas.height = anchorY + 1;\n\n\tlet colors = getColors(options),\n\t\tcolor0 = colors[0],\n\t\tcolor1 = colors[1];\n\n\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\n\tgrad.addColorStop(0, color0);\n\tgrad.addColorStop(1, color1);\n\n\tcontext.fillStyle = grad;\n\tcontext.strokeStyle = color1;\n\tcontext.beginPath();\n\n\tcontext.moveTo(anchorX, anchorY);\n\n\t// arco superior\n\tcontext.arc(\n\t\tanchorX,\n\t\t2 + 0.5 * anchorY,\n\t\tradius,\n\t\tangulo,\n\t\tMath.PI - angulo,\n\t\ttrue\n\t);\n\n\t//punta inferior\n\tcontext.lineTo(anchorX, anchorY);\n\n\tcontext.fill();\n\tcontext.stroke();\n\n\t// Círculo blanco\n\tcontext.beginPath();\n\tcontext.arc(anchorX, 2 + 0.5 * anchorY, radius - 3, 0, 2 * Math.PI, false);\n\tcontext.fillStyle = \"white\";\n\tcontext.fill();\n\n\tcontext.beginPath();\n\n\tcontext.font = \"normal normal normal \" + fontsize + \"px \" + font;\n\t//console.log('context font', context.font);\n\tcontext.fillStyle = color1;\n\tcontext.textBaseline = \"top\";\n\n\tlet textWidth = context.measureText(options.unicodelabel),\n\t\ttext_x = options.unicodelabel,\n\t\tlabel_x = Math.floor(canvas.width / 2 - textWidth.width / 2),\n\t\tlabel_y = 1 + Math.floor(canvas.height / 2 - fontsize / 2);\n\n\t// centre the text.\n\tcontext.fillText(text_x, label_x, label_y);\n\tcanvas.fillColor = color0;\n\treturn canvas;\n};\n\nexport function createFatMarkerIcon(theoptions) {\n\tlet scale = theoptions.scale || 1,\n\t\tmarkerCanvas = generateFatCanvas(theoptions),\n\t\tmarkerOpts = {};\n\n\ttheoptions.type = \"fatmarker\";\n\n\tObject.assign(markerOpts, theoptions);\n\n\tObject.assign(markerOpts, {\n\t\torigin: { x: 0, y: 0 },\n\t\tanchor: { x: 21 * scale, y: 36 * scale },\n\t\tsize: { width: 54, height: 48 },\n\t\tscaledSize: { width: 42 * scale, height: 36 * scale },\n\t\tscale: scale\n\t});\n\n\tlet url = markerCanvas.toDataURL(),\n\t\tfillColor = markerCanvas.fillColor,\n\t\ticonObj = new IconObject(url, fillColor, markerOpts);\n\treturn iconObj;\n}\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nimport { getColors } from \"./parsers.js\";\nconst generateGroupedCanvas = function(options) {\n    let text_x,\n        canvas = options.canvas || document.createElement(\"canvas\"),\n        context = canvas.getContext(\"2d\"),\n        font = options.font || \"fontello\",\n        fontsize = options.fontsize || 26;\n\n    canvas.width = 54;\n    canvas.height = 48;\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    let colors = getColors(options),\n        color0 = colors[0];\n    context.beginPath();\n\n    context.font = \"normal normal normal \" + fontsize + \"px \" + font;\n\n    context.textBaseline = \"top\";\n    let textWidth = context.measureText(options.unicodelabel);\n    text_x = Math.floor(canvas.width / 2 - textWidth.width / 2);\n\n    context.shadowOffsetX = -2;\n    context.shadowOffsetY = -2;\n    context.shadowBlur = 0;\n\n    context.fillStyle = \"#FFFFFF\";\n    context.shadowColor = \"#666666\";\n\n    context.fillText(options.unicodelabel, text_x - 4, 2);\n    context.fillText(options.unicodelabel, text_x, 5);\n    context.fillStyle = color0;\n    context.fillText(options.unicodelabel, text_x + 4, 8);\n\n    context.strokeStyle = \"#FFFFFF\";\n    context.strokeText(options.unicodelabel, text_x + 4, 8);\n\n    canvas.fillColor = color0;\n\n    return canvas;\n};\n\nexport function createGroupedIcon(theoptions) {\n    theoptions.scale = theoptions.scale || 1;\n    theoptions.fontsize = theoptions.fontsize || 26;\n\n    let markerCanvas = generateGroupedCanvas(theoptions),\n        markerOpts = {};\n\n    let scale = theoptions.scale;\n\n    theoptions.type = \"transparent\";\n\n    Object.assign(markerOpts, theoptions);\n\n    Object.assign(markerOpts, {\n        origin: { x: 0, y: 0 },\n        anchor: { x: 27 * scale, y: 24 * scale },\n        size: { width: 54, height: 48 },\n        scaledSize: { width: 54 * scale, height: 48 * scale }\n    });\n\n    let url = markerCanvas.toDataURL(),\n        fillColor = markerCanvas.fillColor,\n        iconObj = new IconObject(url, fillColor, markerOpts);\n\n    return iconObj;\n}\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nimport { getColors } from \"./parsers.js\";\nconst generateTransparentCanvas = function(options) {\n    let text_x,\n        canvas = options.canvas || document.createElement(\"canvas\"),\n        context = canvas.getContext(\"2d\"),\n        font = options.font || \"fontello\",\n        fontsize = options.fontsize || 26;\n\n    canvas.width = 54;\n    canvas.height = 48;\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    let colors = getColors(options),\n        color0 = colors[0],\n        color1 = colors[1];\n    context.beginPath();\n\n    context.font = \"normal normal normal \" + (fontsize - 3) + \"px \" + font;\n\n    context.textBaseline = \"top\";\n    let textmetric = context.measureText(options.unicodelabel);\n    text_x = Math.floor(canvas.width / 2 - textmetric.width / 2);\n\n    //console.debug('textmetric', textmetric);\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 0;\n    context.shadowColor = \"#FFFFFF\";\n    context.fillStyle = color0;\n    context.fillText(options.unicodelabel, text_x + 1, 6);\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 1;\n    context.shadowColor = \"#FFFFFF\";\n    context.strokeStyle = color1;\n    context.strokeText(options.unicodelabel, text_x + 1, 6);\n\n    canvas.fillColor = color0;\n\n    return canvas;\n};\n\nexport function createTransparentMarkerIcon(theoptions) {\n    theoptions.scale = theoptions.scale || 1;\n    theoptions.fontsize = theoptions.fontsize || 26;\n\n    let markerCanvas = generateTransparentCanvas(theoptions),\n        markerOpts = {};\n\n    let scale = theoptions.scale;\n\n    theoptions.type = \"transparent\";\n\n    Object.assign(markerOpts, theoptions);\n\n    Object.assign(markerOpts, {\n        origin: { x: 0, y: 0 },\n        anchor: { x: 27 * scale, y: 24 * scale },\n        size: { width: 54, height: 48 },\n        scaledSize: { width: 54 * scale, height: 48 * scale }\n    });\n\n    let url = markerCanvas.toDataURL(),\n        fillColor = markerCanvas.fillColor,\n        iconObj = new IconObject(url, fillColor, markerOpts);\n\n    return iconObj;\n}\n"],"names":["hslaString","hslcolor","undefined","a","h","s","l","parseFloat","rgbaString","hexcolor","r","g","b","parseHalf","foo","parseInt","compact","array","index","length","resIndex","result","value","omit","obj","fn","target","i","Object","prototype","hasOwnProperty","call","IconObject","url","fillColor","markerOpts","this","assign","parseHex","hexstring","opacity","darkenfactor","hex","replace","isNaN","substring","strokeColor","join","rgb","parseHSL","hslstring","hslcolor_stroke","hslparts","split","hsl","parseRGB","rgbstring","rgbcolor","rgbparts","hue2rgb","p","q","t","getColors","options","color0","color1","count","val","range","Math","floor","getColor","deccolor","stringcolor","parsedcolor","indexOf","toDecColor","color","factor","darkercolor","darken","padHex","str_in","String","toJSON","serialized","prop","generateClusterCanvas","canvas","document","createElement","radius","anchorX","font","fontsize","context","getContext","width","height","anchorY","clearRect","moveTo","labelvalue","label","setLineDash","beginPath","arc","PI","fillStyle","strokeStyle","lineWidth","fill","stroke","textBaseline","textWidth","measureText","text_x","label_x","label_y","fillText","generateCanvas","ancho","x","y","cx","cy","grad","createLinearGradient","colors","addColorStop","rect","generateFatCanvas","lineTo","unicodelabel","generateGroupedCanvas","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","strokeText","generateTransparentCanvas","textmetric","MarkerFactory","createTransparentMarkerIcon","theoptions","scale","markerCanvas","type","origin","anchor","size","scaledSize","toDataURL","createFatMarkerIcon","createTextMarker","createClusterIcon","createGroupedIcon","readCache","cacheKey","no_cache","cached","window","sessionStorage","getItem","cachedObj","JSON","parse","iconObj","key","setCache","setItem","stringify","generateAutoicon","generatorFN","is_icon","shadow","transparent_background","cleanOptions","sortedOpts","entries","filter","item","sort","serializeOptions","parseColorString","somecolor","original","round","hslToRGB","in_r","in_g","in_b","in_a","max","min","sum","diff","rgbToHSL","rgba","hsla","toString","autoIcon","console","warn","slice","fromCharCode"],"mappings":"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"}