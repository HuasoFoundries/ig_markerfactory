{"version":3,"file":"markerfactory.min.js","sources":["../src/markerfactory.js"],"sourcesContent":[" function compact(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n        var value = array[index];\n        if (value) {\n            result[resIndex++] = value;\n        }\n    }\n    return result;\n }\n\n function padHex(str_in) {\n    if (('' + str_in).length === 1) {\n        return '0' + String(str_in);\n    } else {\n        return String(str_in);\n    }\n }\n\n var defaults = {\n    h: 1,\n    s: 78, // constant saturation\n    l: 63, // constant luminance\n    a: 1\n };\n\n function hslaString(hslcolor) {\n    return 'hsla(' + hslcolor.h + ',' + hslcolor.s + '%,' + hslcolor.l + '%,' + hslcolor.a + ')';\n }\n\n function rgbaString(hexcolor) {\n    return 'rgba(' + hexcolor.r + ',' + hexcolor.g + ',' + hexcolor.b + ',' + hexcolor.a + ')';\n }\n\n function getColor(val, range) {\n    defaults.h = Math.floor((360 / range) * val);\n    return hslaString(defaults);\n }\n\n function getColor1() {\n    var defaults1 = {\n        h: 1,\n        s: 78, // constant saturation\n        l: 33, // constant luminance\n        a: 1\n    };\n    return hslaString(defaults1);\n }\n\n function parseHalf(foo) {\n    return parseInt(foo / 2, 10);\n }\n\n\n\n function darken(stringcolor, factor) {\n    var darkercolor = {};\n    if (!factor) {\n        factor = 1;\n    }\n    if (stringcolor.fillColor.indexOf('rgb') !== -1) {\n        darkercolor.r = factor * parseHalf(stringcolor.r);\n        darkercolor.g = factor * parseHalf(stringcolor.g);\n        darkercolor.b = factor * parseHalf(stringcolor.b);\n        darkercolor.a = 0.99;\n        darkercolor.fillColor = rgbaString(darkercolor);\n    } else if (stringcolor.fillColor.indexOf('hsl') !== -1) {\n        darkercolor.h = stringcolor.h;\n        darkercolor.s = stringcolor.s;\n        darkercolor.l = factor * stringcolor.l - 30;\n        darkercolor.fillColor = 'hsl(' + darkercolor.h + ',' + darkercolor.s + '%,' + darkercolor.l + '%)';\n    }\n\n    return darkercolor;\n }\n\n function getColors(options) {\n    var color0, color1;\n    if (options.index !== undefined && options.count > 0) {\n        color0 = getColor(options.index, options.count);\n        color1 = getColor1();\n    } else {\n        var deccolor = toDecColor(options.color);\n        color0 = deccolor.fillColor;\n        color1 = darken(deccolor).fillColor;\n    }\n    return [color0, color1];\n }\n\n function parseHex(hexstring, opacity, darkenfactor) {\n    var hexcolor = {\n        hex: hexstring\n    };\n    darkenfactor = darkenfactor || 1;\n\n    hexstring = hexstring.replace('#', '');\n    if (hexstring.length === 3) {\n        hexstring = hexstring[0] + hexstring[0] + hexstring[1] + hexstring[1] + hexstring[2] + hexstring[2];\n    }\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    hexcolor.r = parseInt(darkenfactor * (parseInt(hexstring.substring(0, 2), 16)), 10);\n    hexcolor.g = parseInt(darkenfactor * (parseInt(hexstring.substring(2, 4), 16)), 10);\n    hexcolor.b = parseInt(darkenfactor * (parseInt(hexstring.substring(4, 6), 16)), 10);\n    hexcolor.a = opacity;\n    hexcolor.fillColor = rgbaString(hexcolor);\n    hexcolor.strokeColor = ['rgba(' + parseHalf(hexcolor.r), parseHalf(hexcolor.g), parseHalf(hexcolor.b), hexcolor.a + ')'].join(',');\n    hexcolor.rgb = hexcolor.fillColor;\n    return hexcolor;\n }\n\n\n\n function parseHSL(hslstring, opacity) {\n    var hslcolor = {},\n        hslcolor_stroke = {},\n        hslparts = compact(hslstring.split(/hsla?\\(|\\,|\\)|\\%/));\n\n    if (hslparts[3] === undefined) {\n        hslparts[3] = 1;\n    }\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    hslcolor.h = hslcolor_stroke.h = parseFloat(hslparts[0], 10);\n    hslcolor.s = hslcolor_stroke.s = parseFloat(hslparts[1], 10);\n    hslcolor.l = parseFloat(hslparts[2], 10);\n    hslcolor.a = hslcolor_stroke.a = parseFloat(opacity * hslparts[3], 10);\n    hslcolor_stroke.l = parseInt(hslcolor.l / 2, 10);\n\n\n    hslcolor.fillColor = hslaString(hslcolor);\n    hslcolor.strokeColor = hslaString(hslcolor_stroke);\n    hslcolor.hsl = hslcolor.fillColor;\n    return hslcolor;\n };\n\n function parseRGB(rgbstring, opacity, darkenfactor) {\n    var rgbcolor = {},\n        rgbparts = compact(rgbstring.split(/rgba?\\(|\\,|\\)/));\n\n    darkenfactor = darkenfactor || 1;\n\n    if (rgbparts[3] === undefined) {\n        rgbparts[3] = 1;\n    }\n\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    rgbcolor.r = parseInt(darkenfactor * (parseInt(rgbparts[0], 10) % 256), 10);\n    rgbcolor.g = parseInt(darkenfactor * (parseInt(rgbparts[1], 10) % 256), 10);\n    rgbcolor.b = parseInt(darkenfactor * (parseInt(rgbparts[2], 10) % 256), 10);\n    rgbcolor.a = parseFloat(opacity * rgbparts[3], 10);\n    rgbcolor.fillColor = rgbaString(rgbcolor);\n    rgbcolor.strokeColor = 'rgba(' + rgbcolor.r / 2 + ',' + rgbcolor.g / 2 + ',' + rgbcolor.b / 2 + ',' + rgbcolor.a + ')';\n    rgbcolor.rgb = rgbcolor.fillColor;\n    return rgbcolor;\n }\n\n function rgbToHSL(r, g, b, a) {\n    r = (r % 256) / 255;\n    g = (g % 256) / 255;\n    b = (b % 256) / 255;\n    if (a === undefined) {\n        a = 1;\n    }\n    var max = Math.max(r, g, b),\n        min = Math.min(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n        case g:\n            h = (b - r) / d + 2;\n            break;\n        case b:\n            h = (r - g) / d + 4;\n            break;\n        default:\n            h = 0;\n            break;\n        }\n\n        h /= 6;\n    }\n    var hsl = {\n        h: Math.round(360 * h),\n        s: Math.round(100 * s),\n        l: Math.round(100 * l),\n        a: Math.round(100 * a) / 100\n    };\n\n    hsl.fillColor = hslaString(hsl);\n\n    return hsl;\n }\n\n function hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n }\n\n function hslToRGB(h, s, l, a, darkenfactor) {\n    var r, g, b;\n\n    darkenfactor = darkenfactor || 1;\n    h = parseFloat(h, 10) / 360;\n    s = parseFloat(s, 10) / 100;\n    l = parseFloat(l, 10) / 100;\n    if (a === undefined) {\n        a = 1;\n    }\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n\n\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    if (a === undefined) {\n        a = 1;\n    }\n\n    var rgb = {\n        r: Math.round(r * 255 * darkenfactor),\n        g: Math.round(g * 255 * darkenfactor),\n        b: Math.round(b * 255 * darkenfactor),\n        a: parseFloat(a, 10)\n    };\n\n    rgb.fillColor = rgbaString(rgb);\n\n    return rgb;\n\n };\n\n function toDecColor(stringcolor) {\n    var parsedcolor = {};\n    if (!stringcolor) {\n        parsedcolor.fillColor = 'rgba(100,250,50,0.99)';\n    } else if (stringcolor.indexOf('rgb') !== -1) {\n        parsedcolor = parseRGB(stringcolor);\n    } else if (stringcolor.indexOf('hsl') !== -1) {\n        parsedcolor = parseHSL(stringcolor);\n    } else {\n        parsedcolor = parseHex(stringcolor);\n    }\n\n    return parsedcolor;\n };\n\n var IconObject = function (canvas, markerOpts) {\n    this.url = canvas.toDataURL();\n    this.fillColor = canvas.fillColor;\n    this.markerOpts = markerOpts;\n    Object.assign(this, markerOpts);\n    return this;\n };\n IconObject.prototype.toJSON = function () {\n    return {\n        url: null,\n        markerOpts: this.markerOpts\n    };\n };\n\n var createTextMarker = function (theoptions) {\n\n    var generateCanvas = function (options) {\n        var canvas = document.createElement(\"canvas\");\n        var ancho = 30,\n            alto = 40;\n        canvas.width = ancho + 18;\n        canvas.height = alto;\n        var x = canvas.width / 2,\n            y = canvas.height - 2,\n            radius = ancho / 2,\n            angulo = 0.6;\n\n        var font = \"'\" + options.font + \"'\" || 'Arial';\n        var fontsize = options.fontsize || 11;\n\n        var context = canvas.getContext(\"2d\");\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        var radius0 = 2 * radius,\n            cx = x + 0.95 * radius0,\n            cy = y + 0.45 * radius0;\n\n        var grad = context.createLinearGradient(0, 0, 0, canvas.height),\n            colors = getColors(options),\n            color0 = colors[0],\n            color1 = colors[1];\n\n        grad.addColorStop(0, color0);\n        grad.addColorStop(1, color1);\n\n        context.fillStyle = grad;\n        context.strokeStyle = 'rgba(200,200,200,0.7)';\n\n        context.beginPath();\n\n        //arco izquierdo\n        context.arc(cx - 1, cy, radius0, 9 * Math.PI / 8, -6 * Math.PI / 8, false);\n\n        // arco superior\n        context.arc(x, (y - 7) / 2, radius, angulo, Math.PI - angulo, true);\n\n        //arco derecho\n        context.arc(2 * x - cx + 1, cy, radius0, -0.95 * Math.PI / 3, -Math.PI / 8, false);\n        context.fill();\n        context.stroke();\n\n        context.beginPath();\n        context.arc(x, 0.40 * y, 2 * radius / 3, 0, 2 * Math.PI, false);\n        context.fillStyle = 'white';\n        context.fill();\n\n        context.beginPath();\n\n        // Render Label\n        //context.font = \"11pt Arial\";\n        context.font = fontsize + \"pt \" + font;\n        context.textBaseline = \"top\";\n\n        var textWidth = context.measureText(options.label);\n\n        if (textWidth.width > ancho || String(options.label).length > 3) {\n            context.rect(x - 2 - textWidth.width / 2, y - 30, x - 2 + textWidth.width / 2, y - 23);\n            context.fillStyle = '#F7F0F0';\n            context.fill();\n            context.stroke();\n        }\n\n        context.fillStyle = \"black\";\n        context.strokeStyle = \"black\";\n        // centre the text.\n        context.fillText(options.label, 1 + Math.floor((canvas.width / 2) - (textWidth.width / 2)), 8);\n\n        return canvas;\n\n    };\n    theoptions.scale = theoptions.scale || 0.75;\n    var markerCanvas = generateCanvas(theoptions),\n        markerOpts = {};\n\n    theoptions.type = 'textmarker';\n\n    Object.assign(markerOpts, theoptions);\n\n    if (window && window.google && window.google.maps) {\n        Object.assign(markerOpts, {\n            size: new google.maps.Size(48, 40),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(24 * theoptions.scale, 40 * theoptions.scale),\n            scaledSize: new google.maps.Size(48 * theoptions.scale, 40 * theoptions.scale)\n        });\n    }\n    var iconObj = new IconObject(markerCanvas, markerOpts);\n\n    return iconObj;\n };\n\n\n\n var createClusterIcon = function (theoptions) {\n\n    var generateClusterCanvas = function (options) {\n        var canvas = options.canvas || document.createElement(\"canvas\"),\n            anchorX = 27,\n            anchorY = 53,\n            radius = (anchorX - 9),\n            angulo = 1.1,\n            font = options.font || 'fontello',\n            fontsize = options.fontsize || 14,\n            context = canvas.getContext(\"2d\"),\n            grad = context.createLinearGradient(0, 0, 0, anchorY);\n\n        canvas.width = anchorX * 2;\n        canvas.height = anchorY + 1;\n\n        var colors = getColors(options),\n            color0 = colors[0],\n            color1 = colors[1];\n\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.moveTo(anchorX, anchorY);\n\n        var labelvalue = parseInt(options.label);\n        if (labelvalue < 10) {\n            color1 = 'orange';\n            fontsize = 14;\n        } else if (labelvalue < 30) {\n            color1 = 'red';\n            fontsize = 15;\n        } else {\n            color1 = 'purple';\n            fontsize = 16;\n        }\n        if (labelvalue > 99) {\n            radius = radius + 3;\n            context.setLineDash([5, 5])\n            context.beginPath();\n            context.arc(anchorX, 2 + (0.50 * anchorY), (radius + 7), 0, 2 * Math.PI, false);\n            context.fillStyle = 'transparent';\n            context.strokeStyle = color1;\n            context.lineWidth = 2;\n            context.fill();\n            context.stroke();\n        }\n\n        context.setLineDash([5, 5])\n        context.beginPath();\n        context.arc(anchorX, 2 + (0.50 * anchorY), (radius + 2), 0, 2 * Math.PI, false);\n        context.fillStyle = 'transparent';\n        context.strokeStyle = color1;\n        context.lineWidth = 2;\n        context.fill();\n        context.stroke();\n\n        // Círculo blanco\n        context.setLineDash([5, 0])\n        context.beginPath();\n        context.arc(anchorX, 2 + (0.50 * anchorY), (radius - 3), 0, 2 * Math.PI, false);\n        context.fillStyle = 'white';\n        context.strokeStyle = color1;\n        context.lineWidth = 4;\n        context.fill();\n        context.stroke();\n\n        context.beginPath();\n\n        context.font = 'normal normal normal ' + fontsize + 'px ' + font;\n        console.log('context font', context.font);\n        context.fillStyle = '#333';\n        context.textBaseline = \"top\";\n        var textWidth = context.measureText(options.label);\n\n        // centre the text.\n        context.fillText(options.label, Math.floor((canvas.width / 2) - (textWidth.width / 2)), 1 + Math.floor(canvas.height / 2 - fontsize / 2));\n\n        return canvas;\n\n    };\n    theoptions.scale = theoptions.scale || 1;\n    var markerCanvas = generateClusterCanvas(theoptions),\n        markerOpts = {},\n        scale = theoptions.scale;\n\n    Object.assign(markerOpts, theoptions);\n\n    if (window && window.google && window.google.maps) {\n        Object.assign(markerOpts, {\n            size: new google.maps.Size(54, 48),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(27 * scale, 24 * scale),\n            scaledSize: new google.maps.Size(54 * scale, 48 * scale)\n        });\n    }\n\n    var iconObj = new IconObject(markerCanvas, markerOpts);\n\n    return iconObj;\n };\n\n var createFatMarkerIcon = function (theoptions) {\n\n    var generateFatCanvas = function (options) {\n        var canvas = options.canvas || document.createElement(\"canvas\"),\n            anchorX = 27,\n            anchorY = 53,\n            radius = (anchorX - 9),\n            angulo = 1.1,\n            font = options.font || 'fontello',\n            fontsize = options.fontsize || 14,\n            context = canvas.getContext(\"2d\"),\n            grad = context.createLinearGradient(0, 0, 0, anchorY);\n\n        canvas.width = anchorX * 2;\n        canvas.height = anchorY + 1;\n\n        var colors = getColors(options),\n            color0 = colors[0],\n            color1 = colors[1];\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        grad.addColorStop(0, color0);\n        grad.addColorStop(1, color1);\n\n        context.fillStyle = grad;\n        context.strokeStyle = color1;\n        context.beginPath();\n\n        context.moveTo(anchorX, anchorY);\n\n        // arco superior\n        context.arc(anchorX, 2 + (0.50 * anchorY), radius, angulo, Math.PI - angulo, true);\n\n        //punta inferior\n        context.lineTo(anchorX, anchorY);\n\n        context.fill();\n        context.stroke();\n\n        // Círculo blanco\n        context.beginPath();\n        context.arc(anchorX, 2 + (0.50 * anchorY), (radius - 3), 0, 2 * Math.PI, false);\n        context.fillStyle = 'white';\n        context.fill();\n\n        context.beginPath();\n\n        context.font = 'normal normal normal ' + fontsize + 'px ' + font;\n        //console.log('context font', context.font);\n        context.fillStyle = color1;\n        context.textBaseline = \"top\";\n        var textWidth = context.measureText(options.unicodelabel);\n\n        // centre the text.\n        context.fillText(options.unicodelabel, Math.floor((canvas.width / 2) - (textWidth.width / 2)), 1 + Math.floor(canvas.height / 2 - fontsize / 2));\n        canvas.fillColor = color0;\n        return canvas;\n\n    };\n    var scale = theoptions.scale || 1,\n        markerCanvas = generateFatCanvas(theoptions),\n        markerOpts = {};\n\n    theoptions.type = 'fatmarker';\n\n    Object.assign(markerOpts, theoptions);\n\n    if (window && window.google && window.google.maps) {\n        Object.assign(markerOpts, {\n            size: new google.maps.Size(54, 48),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(21 * scale, 36 * scale),\n            scaledSize: new google.maps.Size(42 * scale, 36 * scale),\n            scale: scale\n        });\n    }\n    var iconObj = new IconObject(markerCanvas, markerOpts);\n    return iconObj;\n };\n\n var createTransparentMarkerIcon = function (theoptions) {\n\n    var generateTransparentCanvas = function (options) {\n        var canvas = options.canvas || document.createElement(\"canvas\"),\n            context = canvas.getContext(\"2d\"),\n            font = options.font || 'fontello',\n            fontsize = options.fontsize || 26;\n\n        canvas.width = 54;\n        canvas.height = 48;\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        /*context.rect(1, 1, canvas.width - 2, canvas.height - 2);\n        context.lineWidth = 1;\n        context.strokeStyle = 'black';\n        context.stroke();*/\n\n        var colors = getColors(options),\n            color0 = colors[0],\n            color1 = colors[1];\n        context.beginPath();\n\n        if (options.shadow) {\n\n            context.font = 'normal normal normal ' + fontsize + 'px ' + font;\n\n            context.textBaseline = \"top\";\n            var textWidth = context.measureText(options.unicodelabel),\n                text_x = Math.floor((canvas.width / 2) - (textWidth.width / 2));\n\n            context.shadowOffsetX = -2;\n            context.shadowOffsetY = -2;\n            context.shadowBlur = 0;\n\n            context.fillStyle = '#FFFFFF';\n            context.shadowColor = '#666666';\n\n            context.fillText(options.unicodelabel, text_x - 4, 2);\n            context.fillText(options.unicodelabel, text_x, 5);\n            context.fillStyle = color0;\n            context.fillText(options.unicodelabel, text_x + 4, 8);\n\n            context.strokeStyle = '#FFFFFF';\n            context.strokeText(options.unicodelabel, text_x + 4, 8);\n\n        } else {\n\n            context.font = 'normal normal normal ' + (fontsize - 3) + 'px ' + font;\n\n            context.textBaseline = \"top\";\n            var textmetric = context.measureText(options.unicodelabel),\n                text_x = Math.floor((canvas.width / 2) - (textmetric.width / 2));\n\n            //console.debug('textmetric', textmetric);\n\n            context.shadowOffsetX = 2;\n            context.shadowOffsetY = 2;\n            context.shadowBlur = 0;\n            context.shadowColor = '#FFFFFF';\n            context.fillStyle = color0;\n            context.fillText(options.unicodelabel, text_x + 1, 6);\n\n            context.shadowOffsetX = 2;\n            context.shadowOffsetY = 2;\n            context.shadowBlur = 1;\n            context.shadowColor = '#FFFFFF';\n            context.strokeStyle = color1;\n            context.strokeText(options.unicodelabel, text_x + 1, 6);\n\n        }\n\n        canvas.fillColor = color0;\n\n        return canvas;\n\n    };\n\n    theoptions.scale = theoptions.scale || 1;\n    theoptions.fontsize = theoptions.fontsize || 26;\n\n    var markerCanvas = generateTransparentCanvas(theoptions),\n        markerOpts = {};\n\n    var scale = theoptions.scale;\n    /*if (theoptions.shadow) {\n        scale = 0.9 * scale;\n    }*/\n    theoptions.type = 'transparent';\n\n    Object.assign(markerOpts, theoptions);\n\n    if (window.google && window.google.maps) {\n        Object.assign(markerOpts, {\n            size: new google.maps.Size(54 * scale, 48 * scale),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(27 * scale, 24 * scale),\n            scaledSize: new google.maps.Size(54 * scale, 48 * scale)\n        });\n    }\n    var iconObj = new IconObject(markerCanvas, markerOpts);\n\n    return iconObj;\n };\n\n\n\n\n var MarkerFactory = {\n    createTransparentMarkerIcon: createTransparentMarkerIcon,\n    createFatMarkerIcon: createFatMarkerIcon,\n    createTextMarker: createTextMarker,\n    /**\n     * Receives a color string rgb(a), hsl(a) or hex, returns its components\n     * in rgba and hsla, with optional transparency\n     * plus a darkened version (default is half of each RGB component) and a \n     *\n     * @param {string} somecolor          - A color string in  rgb(a), hsl(a) or hex format\n     * @param {Number} [opacity=1]        - Opacity to apply to the color\n     * @param {Number} [darkenfactor=1] - How much darker should the resulting color be\n     * \n     * @return     {Object}  input color parsed and modified as requested\n     */\n    parseColorString: function (somecolor, opacity, darkenfactor) {\n        var parsedcolor = {\n                original: somecolor\n            },\n            hsl, rgb;\n\n        darkenfactor = darkenfactor || 1;\n        opacity = opacity || 1;\n\n        if (somecolor.indexOf('hsl') !== -1) {\n            hsl = parseHSL(somecolor, opacity);\n            rgb = hslToRGB(hsl.h, hsl.s, hsl.l, hsl.a, darkenfactor);\n\n        } else {\n            if (somecolor.indexOf('rgb') !== -1) {\n                rgb = parseRGB(somecolor, opacity, darkenfactor);\n            } else {\n                rgb = parseHex(somecolor, opacity, darkenfactor);\n            }\n\n\n        }\n\n\n        hsl = rgbToHSL(rgb.r, rgb.g, rgb.b, rgb.a);\n\n\n        parsedcolor.hsl = {\n            h: hsl.h,\n            s: hsl.s,\n            l: hsl.l,\n            a: hsl.a\n        };\n        parsedcolor.rgb = {\n            r: rgb.r,\n            g: rgb.g,\n            b: rgb.b,\n            a: rgb.a\n        };\n\n\n\n        parsedcolor.fillColor = rgb.fillColor;\n        parsedcolor.rgba = rgb.fillColor;\n        parsedcolor.hsla = hsl.fillColor;\n        parsedcolor.strokeColor = rgb.strokeColor;\n        parsedcolor.hex = ['#', padHex(rgb.r.toString(16)), padHex(rgb.g.toString(16)), padHex(rgb.b.toString(16))].join('');\n        return parsedcolor;\n    },\n    /**\n     * Generates an google maps marker (or an image as dataurl from the given options)\n     *\n     * @param      {Object}  options  The options\n     * @return     {Object}  { description_of_the_return_value }\n     */\n    autoIcon: function (options) {\n\n        if (typeof (options) !== 'object') {\n            console.warn('autoIcon expects an object as its only parameter');\n            return null;\n        }\n\n        options.label = String(options.label || 'A');\n        options.color = options.color || '#FF0000';\n\n        // unless explicitly set to false, the icon doesn't have a marker-like wrapper\n        if (options.transparent_background === undefined) {\n            options.transparent_background = true;\n        }\n\n        if (options.label.length === 4 || options.label.substring(0, 2) === '0x') {\n\n\n            options.font = options.font || 'fontello';\n            options.label = (options.label || 'e836').slice(-4);\n            options.unicodelabel = String.fromCharCode('0x' + options.label);\n            options.scale = options.scale || 1;\n\n            if (options.transparent_background) {\n                console.log('createTransparentMarkerIcon', options.font);\n                return MarkerFactory.createTransparentMarkerIcon(options);\n            } else {\n                console.log('createFatMarkerIcon', options.font);\n                return MarkerFactory.createFatMarkerIcon(options);\n            }\n        } else if (options.shadow) {\n            return createClusterIcon(options);\n        } else {\n            options.scale = options.scale || 0.75;\n            options.label = String(options.label || 'A');\n            options.fontsize = options.fontsize || 11;\n            options.font = options.font || 'Arial';\n            // This is text I should print literally\n            return MarkerFactory.createTextMarker(options);\n        }\n\n    }\n };\n\n\n export {\n    MarkerFactory\n };\n export default MarkerFactory;"],"names":["compact","array","index","length","resIndex","result","value","padHex","str_in","String","hslaString","hslcolor","h","s","l","a","rgbaString","hexcolor","r","g","b","parseHalf","foo","parseInt","getColors","options","color0","color1","undefined","count","val","range","defaults","Math","floor","getColor","deccolor","stringcolor","parsedcolor","indexOf","parseRGB","parseHSL","parseHex","fillColor","toDecColor","color","factor","darkercolor","darken","hexstring","opacity","darkenfactor","hex","replace","isNaN","parseFloat","substring","strokeColor","join","rgb","hslstring","hslcolor_stroke","hslparts","split","hsl","rgbstring","rgbcolor","rgbparts","hue2rgb","p","q","t","IconObject","canvas","markerOpts","this","url","toDataURL","Object","assign","prototype","toJSON","MarkerFactory","createTransparentMarkerIcon","theoptions","scale","fontsize","markerCanvas","document","createElement","context","getContext","font","width","height","clearRect","colors","beginPath","shadow","textBaseline","textWidth","measureText","unicodelabel","text_x","shadowOffsetX","shadowOffsetY","shadowBlur","fillStyle","shadowColor","fillText","strokeStyle","strokeText","textmetric","generateTransparentCanvas","type","window","google","maps","size","Size","origin","Point","anchor","scaledSize","createFatMarkerIcon","grad","createLinearGradient","anchorX","anchorY","addColorStop","moveTo","arc","PI","lineTo","fill","stroke","generateFatCanvas","createTextMarker","ancho","x","y","cx","cy","label","rect","generateCanvas","parseColorString","somecolor","original","round","hslToRGB","max","min","d","rgbToHSL","rgba","hsla","toString","autoIcon","console","warn","transparent_background","slice","fromCharCode","radius","labelvalue","setLineDash","lineWidth","generateClusterCanvas","createClusterIcon"],"mappings":"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"}