{"version":3,"file":"markerfactory.min.js","sources":["../src/icon_object.js","../src/helpers.js","../src/parsers.js","../src/markerfactory.js","../src/create_transparent_marker_icon.js","../src/create_fat_marker_icon.js","../src/create_text_marker.js","../src/create_cluster_icon.js"],"sourcesContent":["function IconObject(canvas, markerOpts) {\n\tthis.url = canvas.toDataURL();\n\tthis.fillColor = canvas.fillColor;\n\tthis.markerOpts = markerOpts;\n\tObject.assign(this, markerOpts);\n\treturn this;\n}\n\nIconObject.prototype.toJSON = function() {\n\treturn {\n\t\turl: null,\n\t\tmarkerOpts: this.markerOpts\n\t};\n};\n\nexport { IconObject };\n","export function hslaString(hslcolor) {\n\tif (hslcolor.a) {\n\t\treturn (\n\t\t\t\"hsla(\" +\n\t\t\thslcolor.h +\n\t\t\t\",\" +\n\t\t\thslcolor.s +\n\t\t\t\"%,\" +\n\t\t\thslcolor.l +\n\t\t\t\"%,\" +\n\t\t\thslcolor.a +\n\t\t\t\")\"\n\t\t);\n\t}\n\treturn \"hsl(\" + hslcolor.h + \",\" + hslcolor.s + \"%,\" + hslcolor.l + \"%)\";\n}\n\nexport function rgbaString(hexcolor) {\n\tif (hexcolor.a) {\n\t\treturn (\n\t\t\t\"rgba(\" +\n\t\t\thexcolor.r +\n\t\t\t\",\" +\n\t\t\thexcolor.g +\n\t\t\t\",\" +\n\t\t\thexcolor.b +\n\t\t\t\",\" +\n\t\t\thexcolor.a +\n\t\t\t\")\"\n\t\t);\n\t}\n\treturn \"rgb(\" + hexcolor.r + \",\" + hexcolor.g + \",\" + hexcolor.b + \")\";\n}\n\nexport function parseHalf(foo) {\n\treturn parseInt(foo / 2, 10);\n}\n\nexport function compact(array) {\n\tlet index = -1,\n\t\tlength = array ? array.length : 0,\n\t\tresIndex = 0,\n\t\tresult = [];\n\n\twhile (++index < length) {\n\t\tlet value = array[index];\n\t\tif (value) {\n\t\t\tresult[resIndex++] = value;\n\t\t}\n\t}\n\treturn result;\n}\n","/** global: google, r, g, b */\n\nimport { hslaString, rgbaString, parseHalf, compact } from \"./helpers.js\";\n\nexport function parseHex(hexstring, opacity, darkenfactor) {\n    let hexcolor = {\n        hex: hexstring\n    };\n    darkenfactor = darkenfactor || 1;\n\n    hexstring = hexstring.replace(\"#\", \"\");\n    if (hexstring.length === 3) {\n        hexstring =\n            hexstring[0] +\n            hexstring[0] +\n            hexstring[1] +\n            hexstring[1] +\n            hexstring[2] +\n            hexstring[2];\n    }\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    hexcolor.r = parseInt(\n        darkenfactor * parseInt(hexstring.substring(0, 2), 16),\n        10\n    );\n    hexcolor.g = parseInt(\n        darkenfactor * parseInt(hexstring.substring(2, 4), 16),\n        10\n    );\n    hexcolor.b = parseInt(\n        darkenfactor * parseInt(hexstring.substring(4, 6), 16),\n        10\n    );\n    hexcolor.a = opacity;\n    hexcolor.fillColor = rgbaString(hexcolor);\n    hexcolor.strokeColor = [\n        \"rgba(\" + parseHalf(hexcolor.r),\n        parseHalf(hexcolor.g),\n        parseHalf(hexcolor.b),\n        hexcolor.a + \")\"\n    ].join(\",\");\n    hexcolor.rgb = hexcolor.fillColor;\n    return hexcolor;\n}\n\nexport function parseHSL(hslstring, opacity) {\n    let hslcolor = {},\n        hslcolor_stroke = {},\n        hslparts = compact(hslstring.split(/hsla?\\(|,|\\)|%/));\n\n    if (hslparts[3] === undefined) {\n        hslparts[3] = 1;\n    }\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    hslcolor.h = hslcolor_stroke.h = parseFloat(hslparts[0], 10);\n    hslcolor.s = hslcolor_stroke.s = parseFloat(hslparts[1], 10);\n    hslcolor.l = parseFloat(hslparts[2], 10);\n    hslcolor.a = hslcolor_stroke.a = parseFloat(opacity * hslparts[3], 10);\n    hslcolor_stroke.l = parseInt(hslcolor.l / 2, 10);\n\n    hslcolor.fillColor = hslaString(hslcolor);\n    hslcolor.strokeColor = hslaString(hslcolor_stroke);\n    hslcolor.hsl = hslcolor.fillColor;\n    return hslcolor;\n}\n\nexport function parseRGB(rgbstring, opacity, darkenfactor) {\n    let rgbcolor = {},\n        rgbparts = compact(rgbstring.split(/rgba?\\(|,|\\)/));\n\n    darkenfactor = darkenfactor || 1;\n\n    if (rgbparts[3] === undefined) {\n        rgbparts[3] = 1;\n    }\n\n    if (isNaN(parseFloat(opacity, 10))) {\n        opacity = 1;\n    }\n\n    rgbcolor.r = parseInt(darkenfactor * (parseInt(rgbparts[0], 10) % 256), 10);\n    rgbcolor.g = parseInt(darkenfactor * (parseInt(rgbparts[1], 10) % 256), 10);\n    rgbcolor.b = parseInt(darkenfactor * (parseInt(rgbparts[2], 10) % 256), 10);\n    rgbcolor.a = parseFloat(opacity * rgbparts[3], 10);\n    rgbcolor.fillColor = rgbaString(rgbcolor);\n    rgbcolor.strokeColor =\n        \"rgba(\" +\n        rgbcolor.r / 2 +\n        \",\" +\n        rgbcolor.g / 2 +\n        \",\" +\n        rgbcolor.b / 2 +\n        \",\" +\n        rgbcolor.a +\n        \")\";\n    rgbcolor.rgb = rgbcolor.fillColor;\n    return rgbcolor;\n}\n\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n\nexport function hslToRGB(h, s, l, a, darkenfactor) {\n    let r, g, b;\n\n    darkenfactor = darkenfactor || 1;\n    h = parseFloat(h, 10) / 360;\n    s = parseFloat(s, 10) / 100;\n    l = parseFloat(l, 10) / 100;\n    if (a === undefined) {\n        a = 1;\n    }\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        let p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    if (a === undefined) {\n        a = 1;\n    }\n\n    let rgb = {\n        r: Math.round(r * 255 * darkenfactor),\n        g: Math.round(g * 255 * darkenfactor),\n        b: Math.round(b * 255 * darkenfactor),\n        a: parseFloat(a, 10)\n    };\n\n    rgb.fillColor = rgbaString(rgb);\n\n    return rgb;\n}\n\nexport function rgbToHSL(in_r, in_g, in_b, in_a) {\n    let h,\n        r = (in_r % 256) / 255,\n        g = (in_g % 256) / 255,\n        b = (in_b % 256) / 255,\n        a = in_a === undefined ? 1 : in_a,\n        max = Math.max(r, g, b),\n        min = Math.min(r, g, b),\n        sum = max + min,\n        diff = max - min,\n        s = sum > 1 ? diff / (2 - sum) : diff / sum;\n\n    switch (max) {\n        case r:\n            h = (g - b) / diff + (g < b ? 6 : 0);\n            break;\n        case g:\n            h = (b - r) / diff + 2;\n            break;\n        case b:\n            h = (r - g) / diff + 4;\n            break;\n        default:\n            h = 0;\n            break;\n    }\n\n    h /= 6;\n\n    if (diff === 0) {\n        h = s = 0; // achromatic\n    }\n\n    let hsl = {\n        h: Math.round(360 * h),\n        s: Math.round(100 * s),\n        l: Math.round(50 * sum),\n        a: Math.round(100 * a) / 100\n    };\n\n    hsl.fillColor = hslaString(hsl);\n\n    return hsl;\n}\n\nfunction toDecColor(stringcolor) {\n    let parsedcolor = {};\n    if (!stringcolor) {\n        parsedcolor.fillColor = \"rgba(100,250,50,0.99)\";\n    } else if (stringcolor.indexOf(\"rgb\") !== -1) {\n        parsedcolor = parseRGB(stringcolor);\n    } else if (stringcolor.indexOf(\"hsl\") !== -1) {\n        parsedcolor = parseHSL(stringcolor);\n    } else {\n        parsedcolor = parseHex(stringcolor);\n    }\n\n    return parsedcolor;\n}\n\nfunction getColor(val, range) {\n    const defaults = {\n        h: Math.floor((360 / range) * val),\n        s: 78, // constant saturation\n        l: 63, // constant luminance\n        a: 1\n    };\n\n    return hslaString(defaults);\n}\n\nfunction getColor1() {\n    const defaults1 = {\n        h: 1,\n        s: 78, // constant saturation\n        l: 33, // constant luminance\n        a: 1\n    };\n    return hslaString(defaults1);\n}\n\nfunction darken(stringcolor, factor) {\n    const darkercolor = {};\n    if (!factor) {\n        factor = 1;\n    }\n    if (stringcolor.fillColor.indexOf(\"rgb\") !== -1) {\n        darkercolor.r = factor * parseHalf(stringcolor.r);\n        darkercolor.g = factor * parseHalf(stringcolor.g);\n        darkercolor.b = factor * parseHalf(stringcolor.b);\n        darkercolor.a = 0.99;\n        darkercolor.fillColor = rgbaString(darkercolor);\n    } else if (stringcolor.fillColor.indexOf(\"hsl\") !== -1) {\n        darkercolor.h = stringcolor.h;\n        darkercolor.s = stringcolor.s;\n        darkercolor.l = factor * stringcolor.l - 30;\n        darkercolor.fillColor = hslaString(darkercolor);\n    }\n\n    return darkercolor;\n}\n\nexport function getColors(options) {\n    let color0, color1;\n    if (options.index !== undefined && options.count > 0) {\n        color0 = getColor(options.index, options.count);\n        color1 = getColor1();\n    } else {\n        let deccolor = toDecColor(options.color);\n        color0 = deccolor.fillColor;\n        color1 = darken(deccolor).fillColor;\n    }\n    return [color0, color1];\n}\n","/** global: google, r, g, b */\n\nimport { createClusterIcon } from \"./create_cluster_icon.js\";\nimport { createTextMarker } from \"./create_text_marker.js\";\n\nimport { createFatMarkerIcon } from \"./create_fat_marker_icon.js\";\n\nimport { createTransparentMarkerIcon } from \"./create_transparent_marker_icon.js\";\n\nimport { parseHex, parseHSL, parseRGB, hslToRGB, rgbToHSL } from \"./parsers.js\";\n\nfunction padHex(str_in) {\n    if ((\"\" + str_in).length === 1) {\n        return \"0\" + String(str_in);\n    } else {\n        return String(str_in);\n    }\n}\n\nconst MarkerFactory = {\n    createTransparentMarkerIcon: createTransparentMarkerIcon,\n    createFatMarkerIcon: createFatMarkerIcon,\n    createTextMarker: createTextMarker,\n    createClusterIcon: createClusterIcon,\n    serializeOptions: function(options) {\n        if (typeof options !== \"object\") {\n            return null;\n        }\n        var sortedOpts = Object.entries(options)\n            .filter(function(item) {\n                return (\n                    typeof item[1] !== \"function\" && typeof item[1] !== \"object\"\n                );\n            })\n            .sort();\n        return JSON.stringify(sortedOpts);\n    },\n    generateAutoicon: function(options) {\n        var generatorFN = MarkerFactory.createFatMarkerIcon,\n            iconObj;\n        options.type = \"fatmarker\";\n\n        if (!options.is_icon) {\n            options.type = \"textmarker\";\n            generatorFN = MarkerFactory.createTextMarker;\n        } else if (options.transparent_background) {\n            options.type = \"transparent\";\n            generatorFN = MarkerFactory.createTransparentMarkerIcon;\n        }\n\n        if (!options.no_cache) {\n            var cacheKey = MarkerFactory.serializeOptions(options);\n\n            iconObj = window.sessionStorage.getItem(cacheKey);\n            if (iconObj !== null && !options.no_cache) {\n                return JSON.parse(iconObj);\n            }\n        }\n\n        iconObj = generatorFN(options);\n\n        if (!options.no_cache) {\n            var cached = iconObj.toJSON();\n            cached.url = iconObj.url;\n            window.sessionStorage.setItem(cacheKey, JSON.stringify(cached));\n        }\n        return iconObj;\n    },\n    /**\n     * Receives a color string rgb(a), hsl(a) or hex, returns its components\n     * in rgba and hsla, with optional transparency\n     * plus a darkened version (default is half of each RGB component) and a\n     *\n     * @param {string} somecolor    - A color string in  rgb(a), hsl(a) or hex format\n     * @param {Number} opacity      - Opacity to apply to the color. Optional, default 1\n     * @param {Number} darkenfactor - How much darker should the resulting color be. Optional, default 1\n     *\n     * @return     {Object}  input color parsed and modified as requested\n     */\n    parseColorString: function(somecolor, opacity, darkenfactor) {\n        let parsedcolor = {\n                original: somecolor\n            },\n            hsl,\n            rgb;\n\n        darkenfactor = darkenfactor || 1;\n        opacity = opacity || 1;\n\n        if (somecolor.indexOf(\"hsl\") !== -1) {\n            hsl = parseHSL(somecolor, opacity);\n            rgb = hslToRGB(hsl.h, hsl.s, hsl.l, hsl.a, darkenfactor);\n        } else if (somecolor.indexOf(\"rgb\") !== -1) {\n            rgb = parseRGB(somecolor, opacity, darkenfactor);\n        } else {\n            rgb = parseHex(somecolor, opacity, darkenfactor);\n        }\n\n        hsl = rgbToHSL(rgb.r, rgb.g, rgb.b, rgb.a);\n\n        parsedcolor.hsl = {\n            h: hsl.h,\n            s: hsl.s,\n            l: hsl.l,\n            a: hsl.a\n        };\n        parsedcolor.rgb = {\n            r: rgb.r,\n            g: rgb.g,\n            b: rgb.b,\n            a: rgb.a\n        };\n\n        parsedcolor.fillColor = rgb.fillColor;\n        parsedcolor.rgba = rgb.fillColor;\n        parsedcolor.hsla = hsl.fillColor;\n        parsedcolor.strokeColor = rgb.strokeColor;\n        parsedcolor.hex = [\n            \"#\",\n            padHex(rgb.r.toString(16)),\n            padHex(rgb.g.toString(16)),\n            padHex(rgb.b.toString(16))\n        ].join(\"\");\n        return parsedcolor;\n    },\n\n    /**\n     * Generates an google maps marker (or an image as dataurl from the given options)\n     *\n     * @param      {Object}  options  The options\n     * @return     {Object}  { description_of_the_return_value }\n     */\n    autoIcon: function(options) {\n        if (typeof options !== \"object\") {\n            console.warn(\"autoIcon expects an object as its only parameter\");\n            return null;\n        }\n        // unless explicitly set to false, the icon doesn't have a marker-like wrapper\n        options.transparent_background =\n            options.transparent_background !== false;\n\n        options.label = String(options.label || \"A\");\n        options.color = options.color || \"#FF0000\";\n\n        if (\n            options.label.length === 4 ||\n            options.label.substring(0, 2) === \"0x\"\n        ) {\n            options.font = options.font || \"fontello\";\n            options.label = (options.label || \"e836\").slice(-4);\n            options.unicodelabel = String.fromCharCode(\"0x\" + options.label);\n            options.scale = options.scale || 1;\n            options.is_icon = true;\n\n            return MarkerFactory.generateAutoicon(options);\n        } else if (options.shadow) {\n            console.log(\"createClusterIcon\", JSON.stringify(options));\n\n            return MarkerFactory.createClusterIcon(options);\n        } else {\n            options.scale = options.scale || 0.75;\n            options.label = String(options.label || \"A\");\n            options.fontsize = options.fontsize || 11;\n            options.font = options.font || \"Arial\";\n            // This is text I should print literally\n\n            return MarkerFactory.generateAutoicon(options);\n        }\n    }\n};\n\nexport { MarkerFactory };\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nimport { getColors } from \"./parsers.js\";\n\nexport function createTransparentMarkerIcon(theoptions) {\n    const generateTransparentCanvas = function(options) {\n        let text_x,\n            canvas = options.canvas || document.createElement(\"canvas\"),\n            context = canvas.getContext(\"2d\"),\n            font = options.font || \"fontello\",\n            fontsize = options.fontsize || 26;\n\n        canvas.width = 54;\n        canvas.height = 48;\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        let colors = getColors(options),\n            color0 = colors[0],\n            color1 = colors[1];\n        context.beginPath();\n\n        if (options.shadow) {\n            context.font = \"normal normal normal \" + fontsize + \"px \" + font;\n\n            context.textBaseline = \"top\";\n            let textWidth = context.measureText(options.unicodelabel);\n            text_x = Math.floor(canvas.width / 2 - textWidth.width / 2);\n\n            context.shadowOffsetX = -2;\n            context.shadowOffsetY = -2;\n            context.shadowBlur = 0;\n\n            context.fillStyle = \"#FFFFFF\";\n            context.shadowColor = \"#666666\";\n\n            context.fillText(options.unicodelabel, text_x - 4, 2);\n            context.fillText(options.unicodelabel, text_x, 5);\n            context.fillStyle = color0;\n            context.fillText(options.unicodelabel, text_x + 4, 8);\n\n            context.strokeStyle = \"#FFFFFF\";\n            context.strokeText(options.unicodelabel, text_x + 4, 8);\n        } else {\n            context.font =\n                \"normal normal normal \" + (fontsize - 3) + \"px \" + font;\n\n            context.textBaseline = \"top\";\n            let textmetric = context.measureText(options.unicodelabel);\n            text_x = Math.floor(canvas.width / 2 - textmetric.width / 2);\n\n            //console.debug('textmetric', textmetric);\n\n            context.shadowOffsetX = 2;\n            context.shadowOffsetY = 2;\n            context.shadowBlur = 0;\n            context.shadowColor = \"#FFFFFF\";\n            context.fillStyle = color0;\n            context.fillText(options.unicodelabel, text_x + 1, 6);\n\n            context.shadowOffsetX = 2;\n            context.shadowOffsetY = 2;\n            context.shadowBlur = 1;\n            context.shadowColor = \"#FFFFFF\";\n            context.strokeStyle = color1;\n            context.strokeText(options.unicodelabel, text_x + 1, 6);\n        }\n\n        canvas.fillColor = color0;\n\n        return canvas;\n    };\n\n    theoptions.scale = theoptions.scale || 1;\n    theoptions.fontsize = theoptions.fontsize || 26;\n\n    let markerCanvas = generateTransparentCanvas(theoptions),\n        markerOpts = {};\n\n    let scale = theoptions.scale;\n\n    theoptions.type = \"transparent\";\n\n    Object.assign(markerOpts, theoptions);\n\n    if (window.google && window.google.maps) {\n        Object.assign(markerOpts, {\n            size: new google.maps.Size(54 * scale, 48 * scale),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(27 * scale, 24 * scale),\n            scaledSize: new google.maps.Size(54 * scale, 48 * scale)\n        });\n    }\n    let iconObj = new IconObject(markerCanvas, markerOpts);\n\n    return iconObj;\n}\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nimport { getColors } from \"./parsers.js\";\n\nexport function createFatMarkerIcon(theoptions) {\n\tconst generateFatCanvas = function(options) {\n\t\tlet canvas = options.canvas || document.createElement(\"canvas\"),\n\t\t\tanchorX = 27,\n\t\t\tanchorY = 53,\n\t\t\tradius = anchorX - 9,\n\t\t\tangulo = 1.1,\n\t\t\tfont = options.font || \"fontello\",\n\t\t\tfontsize = options.fontsize || 14,\n\t\t\tcontext = canvas.getContext(\"2d\"),\n\t\t\tgrad = context.createLinearGradient(0, 0, 0, anchorY);\n\n\t\tcanvas.width = anchorX * 2;\n\t\tcanvas.height = anchorY + 1;\n\n\t\tlet colors = getColors(options),\n\t\t\tcolor0 = colors[0],\n\t\t\tcolor1 = colors[1];\n\n\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\n\t\tgrad.addColorStop(0, color0);\n\t\tgrad.addColorStop(1, color1);\n\n\t\tcontext.fillStyle = grad;\n\t\tcontext.strokeStyle = color1;\n\t\tcontext.beginPath();\n\n\t\tcontext.moveTo(anchorX, anchorY);\n\n\t\t// arco superior\n\t\tcontext.arc(\n\t\t\tanchorX,\n\t\t\t2 + 0.5 * anchorY,\n\t\t\tradius,\n\t\t\tangulo,\n\t\t\tMath.PI - angulo,\n\t\t\ttrue\n\t\t);\n\n\t\t//punta inferior\n\t\tcontext.lineTo(anchorX, anchorY);\n\n\t\tcontext.fill();\n\t\tcontext.stroke();\n\n\t\t// Círculo blanco\n\t\tcontext.beginPath();\n\t\tcontext.arc(\n\t\t\tanchorX,\n\t\t\t2 + 0.5 * anchorY,\n\t\t\tradius - 3,\n\t\t\t0,\n\t\t\t2 * Math.PI,\n\t\t\tfalse\n\t\t);\n\t\tcontext.fillStyle = \"white\";\n\t\tcontext.fill();\n\n\t\tcontext.beginPath();\n\n\t\tcontext.font = \"normal normal normal \" + fontsize + \"px \" + font;\n\t\t//console.log('context font', context.font);\n\t\tcontext.fillStyle = color1;\n\t\tcontext.textBaseline = \"top\";\n\n\t\tlet textWidth = context.measureText(options.unicodelabel),\n\t\t\ttext_x = options.unicodelabel,\n\t\t\tlabel_x = Math.floor(canvas.width / 2 - textWidth.width / 2),\n\t\t\tlabel_y = 1 + Math.floor(canvas.height / 2 - fontsize / 2);\n\n\t\t// centre the text.\n\t\tcontext.fillText(text_x, label_x, label_y);\n\t\tcanvas.fillColor = color0;\n\t\treturn canvas;\n\t};\n\n\tlet scale = theoptions.scale || 1,\n\t\tmarkerCanvas = generateFatCanvas(theoptions),\n\t\tmarkerOpts = {};\n\n\ttheoptions.type = \"fatmarker\";\n\n\tObject.assign(markerOpts, theoptions);\n\n\tif (window && window.google && window.google.maps) {\n\t\tObject.assign(markerOpts, {\n\t\t\tsize: new google.maps.Size(54, 48),\n\t\t\torigin: new google.maps.Point(0, 0),\n\t\t\tanchor: new google.maps.Point(21 * scale, 36 * scale),\n\t\t\tscaledSize: new google.maps.Size(42 * scale, 36 * scale),\n\t\t\tscale: scale\n\t\t});\n\t}\n\tlet iconObj = new IconObject(markerCanvas, markerOpts);\n\treturn iconObj;\n}\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nimport { getColors } from \"./parsers.js\";\n\nexport function createTextMarker(theoptions) {\n    const generateCanvas = function(options) {\n        let canvas = document.createElement(\"canvas\");\n        let ancho = 30,\n            alto = 40;\n        canvas.width = ancho + 18;\n        canvas.height = alto;\n        let x = canvas.width / 2,\n            y = canvas.height - 2,\n            radius = ancho / 2,\n            angulo = 0.6;\n\n        let font = \"'\" + options.font + \"'\" || \"Arial\";\n        let fontsize = options.fontsize || 11;\n\n        let context = canvas.getContext(\"2d\");\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        let radius0 = 2 * radius,\n            cx = x + 0.95 * radius0,\n            cy = y + 0.45 * radius0;\n\n        let grad = context.createLinearGradient(0, 0, 0, canvas.height),\n            colors = getColors(options),\n            color0 = colors[0],\n            color1 = colors[1];\n\n        grad.addColorStop(0, color0);\n        grad.addColorStop(1, color1);\n\n        context.fillStyle = grad;\n        context.strokeStyle = \"rgba(200,200,200,0.7)\";\n\n        context.beginPath();\n\n        //arco izquierdo\n        context.arc(\n            cx - 1,\n            cy,\n            radius0,\n            (9 * Math.PI) / 8,\n            (-6 * Math.PI) / 8,\n            false\n        );\n\n        // arco superior\n        context.arc(x, (y - 7) / 2, radius, angulo, Math.PI - angulo, true);\n\n        //arco derecho\n        context.arc(\n            2 * x - cx + 1,\n            cy,\n            radius0,\n            (-0.95 * Math.PI) / 3,\n            -Math.PI / 8,\n            false\n        );\n        context.fill();\n        context.stroke();\n\n        context.beginPath();\n        context.arc(x, 0.4 * y, (2 * radius) / 3, 0, 2 * Math.PI, false);\n        context.fillStyle = \"white\";\n        context.fill();\n\n        context.beginPath();\n\n        // Render Label\n        //context.font = \"11pt Arial\";\n        context.font = fontsize + \"pt \" + font;\n        context.textBaseline = \"top\";\n\n        let textWidth = context.measureText(options.label);\n\n        if (textWidth.width > ancho || String(options.label).length > 3) {\n            context.rect(\n                x - 2 - textWidth.width / 2,\n                y - 30,\n                x - 2 + textWidth.width / 2,\n                y - 23\n            );\n            context.fillStyle = \"#F7F0F0\";\n            context.fill();\n            context.stroke();\n        }\n\n        context.fillStyle = \"black\";\n        context.strokeStyle = \"black\";\n        // centre the text.\n        context.fillText(\n            options.label,\n            1 + Math.floor(canvas.width / 2 - textWidth.width / 2),\n            8\n        );\n\n        return canvas;\n    };\n    theoptions.scale = theoptions.scale || 0.75;\n    let markerCanvas = generateCanvas(theoptions),\n        markerOpts = {};\n\n    theoptions.type = \"textmarker\";\n\n    Object.assign(markerOpts, theoptions);\n\n    if (window && window.google && window.google.maps) {\n        Object.assign(markerOpts, {\n            size: new google.maps.Size(48, 40),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(\n                24 * theoptions.scale,\n                40 * theoptions.scale\n            ),\n            scaledSize: new google.maps.Size(\n                48 * theoptions.scale,\n                40 * theoptions.scale\n            )\n        });\n    }\n    let iconObj = new IconObject(markerCanvas, markerOpts);\n\n    return iconObj;\n}\n","/** global: google */\nimport { IconObject } from \"./icon_object.js\";\n\nfunction createClusterIcon(theoptions) {\n    const generateClusterCanvas = function(options) {\n        let canvas = options.canvas || document.createElement(\"canvas\"),\n            anchorX = 27,\n            anchorY = 53,\n            radius = anchorX - 9,\n            color1,\n            font = options.font || \"fontello\",\n            fontsize = options.fontsize || 14,\n            context = canvas.getContext(\"2d\");\n\n        canvas.width = anchorX * 2;\n        canvas.height = anchorY + 1;\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.moveTo(anchorX, anchorY);\n\n        let labelvalue = parseInt(options.label, 10);\n        if (labelvalue < 10) {\n            color1 = \"orange\";\n            fontsize = 14;\n        } else if (labelvalue < 30) {\n            color1 = \"red\";\n            fontsize = 15;\n        } else {\n            color1 = \"purple\";\n            fontsize = 16;\n        }\n        if (labelvalue > 99) {\n            radius = radius + 3;\n            context.setLineDash([5, 5]);\n            context.beginPath();\n            context.arc(\n                anchorX,\n                2 + 0.5 * anchorY,\n                radius + 7,\n                0,\n                2 * Math.PI,\n                false\n            );\n            context.fillStyle = \"transparent\";\n            context.strokeStyle = color1;\n            context.lineWidth = 2;\n            context.fill();\n            context.stroke();\n        }\n\n        context.setLineDash([5, 5]);\n        context.beginPath();\n        context.arc(\n            anchorX,\n            2 + 0.5 * anchorY,\n            radius + 2,\n            0,\n            2 * Math.PI,\n            false\n        );\n        context.fillStyle = \"transparent\";\n        context.strokeStyle = color1;\n        context.lineWidth = 2;\n        context.fill();\n        context.stroke();\n\n        // Círculo blanco\n        context.setLineDash([5, 0]);\n        context.beginPath();\n        context.arc(\n            anchorX,\n            2 + 0.5 * anchorY,\n            radius - 3,\n            0,\n            2 * Math.PI,\n            false\n        );\n        context.fillStyle = \"white\";\n        context.strokeStyle = color1;\n        context.lineWidth = 4;\n        context.fill();\n        context.stroke();\n\n        context.beginPath();\n\n        context.font = \"normal normal normal \" + fontsize + \"px \" + font;\n        console.log(\"context font\", context.font);\n        context.fillStyle = \"#333\";\n        context.textBaseline = \"top\";\n\n        let textWidth = context.measureText(options.label),\n            text_x = options.label,\n            label_x = Math.floor(canvas.width / 2 - textWidth.width / 2),\n            label_y = 1 + Math.floor(canvas.height / 2 - fontsize / 2);\n\n        // centre the text.\n        context.fillText(text_x, label_x, label_y);\n\n        return canvas;\n    };\n    theoptions.scale = theoptions.scale || 1;\n    let markerCanvas = generateClusterCanvas(theoptions),\n        markerOpts = {},\n        scale = theoptions.scale;\n\n    Object.assign(markerOpts, theoptions);\n\n    if (window && window.google && window.google.maps) {\n        Object.assign(markerOpts, {\n            size: new google.maps.Size(54, 48),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(27 * scale, 24 * scale),\n            scaledSize: new google.maps.Size(54 * scale, 48 * scale)\n        });\n    }\n\n    let iconObj = new IconObject(markerCanvas, markerOpts);\n\n    return iconObj;\n}\n\nexport { createClusterIcon };\n"],"names":["IconObject","canvas","markerOpts","this","url","toDataURL","fillColor","Object","assign","hslaString","hslcolor","a","h","s","l","rgbaString","hexcolor","r","g","b","parseHalf","foo","parseInt","compact","array","index","length","resIndex","result","value","parseHex","hexstring","opacity","darkenfactor","hex","replace","isNaN","parseFloat","substring","strokeColor","join","rgb","parseHSL","hslstring","hslcolor_stroke","hslparts","split","undefined","hsl","parseRGB","rgbstring","rgbcolor","rgbparts","hue2rgb","p","q","t","getColors","options","color0","color1","count","val","range","Math","floor","getColor","deccolor","stringcolor","parsedcolor","indexOf","toDecColor","color","factor","darkercolor","darken","padHex","str_in","String","prototype","toJSON","MarkerFactory","createTransparentMarkerIcon","theoptions","scale","fontsize","markerCanvas","text_x","document","createElement","context","getContext","font","width","height","clearRect","colors","beginPath","shadow","textBaseline","textWidth","measureText","unicodelabel","shadowOffsetX","shadowOffsetY","shadowBlur","fillStyle","shadowColor","fillText","strokeStyle","strokeText","textmetric","generateTransparentCanvas","type","window","google","maps","size","Size","origin","Point","anchor","scaledSize","createFatMarkerIcon","grad","createLinearGradient","anchorX","anchorY","addColorStop","moveTo","arc","PI","lineTo","fill","stroke","radius","label_x","label_y","generateFatCanvas","createTextMarker","ancho","x","y","cx","cy","label","rect","generateCanvas","createClusterIcon","labelvalue","setLineDash","lineWidth","generateClusterCanvas","serializeOptions","sortedOpts","entries","filter","item","sort","JSON","stringify","generateAutoicon","iconObj","generatorFN","is_icon","transparent_background","no_cache","cacheKey","sessionStorage","getItem","parse","cached","setItem","parseColorString","somecolor","original","round","hslToRGB","in_r","in_g","in_b","in_a","max","min","sum","diff","rgbToHSL","rgba","hsla","toString","autoIcon","console","warn","slice","fromCharCode"],"mappings":"8PAAA,SAASA,WAAWC,OAAQC,YAK3B,OAJAC,KAAKC,IAAMH,OAAOI,YAClBF,KAAKG,UAAYL,OAAOK,UACxBH,KAAKD,WAAaA,WAClBK,OAAOC,OAAOL,KAAMD,YACbC,KCLD,SAASM,WAAWC,UAC1B,OAAIA,SAASC,EAEX,QACAD,SAASE,EACT,IACAF,SAASG,EACT,KACAH,SAASI,EACT,KACAJ,SAASC,EACT,IAGK,OAASD,SAASE,EAAI,IAAMF,SAASG,EAAI,KAAOH,SAASI,EAAI,KAG9D,SAASC,WAAWC,UAC1B,OAAIA,SAASL,EAEX,QACAK,SAASC,EACT,IACAD,SAASE,EACT,IACAF,SAASG,EACT,IACAH,SAASL,EACT,IAGK,OAASK,SAASC,EAAI,IAAMD,SAASE,EAAI,IAAMF,SAASG,EAAI,IAG7D,SAASC,UAAUC,KACzB,OAAOC,SAASD,IAAM,EAAG,IAGnB,SAASE,QAAQC,OAMvB,IALA,IAAIC,OAAS,EACZC,OAASF,MAAQA,MAAME,OAAS,EAChCC,SAAW,EACXC,YAEQH,MAAQC,QAAQ,CACxB,IAAIG,MAAQL,MAAMC,OACdI,QACHD,OAAOD,YAAcE,OAGvB,OAAOD,OC9CD,SAASE,SAASC,UAAWC,QAASC,cACzC,IAAIjB,UACAkB,IAAKH,WAuCT,OArCAE,aAAeA,cAAgB,EAGN,KADzBF,UAAYA,UAAUI,QAAQ,IAAK,KACrBT,SACVK,UACIA,UAAU,GACVA,UAAU,GACVA,UAAU,GACVA,UAAU,GACVA,UAAU,GACVA,UAAU,IAEdK,MAAMC,WAAWL,QAAS,OAC1BA,QAAU,GAGdhB,SAASC,EAAIK,SACTW,aAAeX,SAASS,UAAUO,UAAU,EAAG,GAAI,IACnD,IAEJtB,SAASE,EAAII,SACTW,aAAeX,SAASS,UAAUO,UAAU,EAAG,GAAI,IACnD,IAEJtB,SAASG,EAAIG,SACTW,aAAeX,SAASS,UAAUO,UAAU,EAAG,GAAI,IACnD,IAEJtB,SAASL,EAAIqB,QACbhB,SAASV,UAAYS,WAAWC,UAChCA,SAASuB,aACL,QAAUnB,UAAUJ,SAASC,GAC7BG,UAAUJ,SAASE,GACnBE,UAAUJ,SAASG,GACnBH,SAASL,EAAI,KACf6B,KAAK,KACPxB,SAASyB,IAAMzB,SAASV,UACjBU,SAGJ,SAAS0B,SAASC,UAAWX,SAChC,IAAItB,YACAkC,mBACAC,SAAWtB,QAAQoB,UAAUG,MAAM,mBAkBvC,YAhBoBC,IAAhBF,SAAS,KACTA,SAAS,GAAK,GAEdT,MAAMC,WAAWL,QAAS,OAC1BA,QAAU,GAGdtB,SAASE,EAAIgC,gBAAgBhC,EAAIyB,WAAWQ,SAAS,GAAI,IACzDnC,SAASG,EAAI+B,gBAAgB/B,EAAIwB,WAAWQ,SAAS,GAAI,IACzDnC,SAASI,EAAIuB,WAAWQ,SAAS,GAAI,IACrCnC,SAASC,EAAIiC,gBAAgBjC,EAAI0B,WAAWL,QAAUa,SAAS,GAAI,IACnED,gBAAgB9B,EAAIQ,SAASZ,SAASI,EAAI,EAAG,IAE7CJ,SAASJ,UAAYG,WAAWC,UAChCA,SAAS6B,YAAc9B,WAAWmC,iBAClClC,SAASsC,IAAMtC,SAASJ,UACjBI,SAGJ,SAASuC,SAASC,UAAWlB,QAASC,cACzC,IAAIkB,YACAC,SAAW7B,QAAQ2B,UAAUJ,MAAM,iBA4BvC,OA1BAb,aAAeA,cAAgB,OAEXc,IAAhBK,SAAS,KACTA,SAAS,GAAK,GAGdhB,MAAMC,WAAWL,QAAS,OAC1BA,QAAU,GAGdmB,SAASlC,EAAIK,SAASW,cAAgBX,SAAS8B,SAAS,GAAI,IAAM,KAAM,IACxED,SAASjC,EAAII,SAASW,cAAgBX,SAAS8B,SAAS,GAAI,IAAM,KAAM,IACxED,SAAShC,EAAIG,SAASW,cAAgBX,SAAS8B,SAAS,GAAI,IAAM,KAAM,IACxED,SAASxC,EAAI0B,WAAWL,QAAUoB,SAAS,GAAI,IAC/CD,SAAS7C,UAAYS,WAAWoC,UAChCA,SAASZ,YACL,QACAY,SAASlC,EAAI,EACb,IACAkC,SAASjC,EAAI,EACb,IACAiC,SAAShC,EAAI,EACb,IACAgC,SAASxC,EACT,IACJwC,SAASV,IAAMU,SAAS7C,UACjB6C,SAGX,SAASE,QAAQC,EAAGC,EAAGC,GAOnB,OANIA,EAAI,IACJA,GAAK,GAELA,EAAI,IACJA,GAAK,GAELA,EAAI,EAAI,EACDF,EAAc,GAATC,EAAID,GAASE,EAEzBA,EAAI,GACGD,EAEPC,EAAI,EAAI,EACDF,GAAKC,EAAID,IAAM,EAAI,EAAIE,GAAK,EAEhCF,EA6IJ,SAASG,UAAUC,SACtB,IAAIC,OAAQC,OACZ,QAAsBb,IAAlBW,QAAQjC,OAAuBiC,QAAQG,MAAQ,EAC/CF,OA7CR,SAAkBG,IAAKC,OAQnB,OAAOtD,YANHG,EAAGoD,KAAKC,MAAO,IAAMF,MAASD,KAC9BjD,EAAG,GACHC,EAAG,GACHH,EAAG,IAwCMuD,CAASR,QAAQjC,MAAOiC,QAAQG,OACzCD,OA5BGnD,YALHG,EAAG,EACHC,EAAG,GACHC,EAAG,GACHH,EAAG,QA+BA,CACH,IAAIwD,SA/DZ,SAAoBC,aAChB,IAAIC,eAWJ,OAVKD,YAGDC,aADuC,IAAhCD,YAAYE,QAAQ,OACbrB,SAASmB,cACgB,IAAhCA,YAAYE,QAAQ,OACb5B,SAAS0B,aAETtC,SAASsC,aANvBC,YAAY/D,UAAY,wBASrB+D,YAmDYE,CAAWb,QAAQc,OAClCb,OAASQ,SAAS7D,UAClBsD,OA7BR,SAAgBQ,YAAaK,QACzB,IAAMC,eAiBN,OAhBKD,SACDA,OAAS,IAEiC,IAA1CL,YAAY9D,UAAUgE,QAAQ,QAC9BI,YAAYzD,EAAIwD,OAASrD,UAAUgD,YAAYnD,GAC/CyD,YAAYxD,EAAIuD,OAASrD,UAAUgD,YAAYlD,GAC/CwD,YAAYvD,EAAIsD,OAASrD,UAAUgD,YAAYjD,GAC/CuD,YAAY/D,EAAI,IAChB+D,YAAYpE,UAAYS,WAAW2D,eACc,IAA1CN,YAAY9D,UAAUgE,QAAQ,SACrCI,YAAY9D,EAAIwD,YAAYxD,EAC5B8D,YAAY7D,EAAIuD,YAAYvD,EAC5B6D,YAAY5D,EAAI2D,OAASL,YAAYtD,EAAI,GACzC4D,YAAYpE,UAAYG,WAAWiE,cAGhCA,YAWMC,CAAOR,UAAU7D,UAE9B,OAAQqD,OAAQC,QCrQpB,SAASgB,OAAOC,QACZ,OAA6B,KAAxB,GAAKA,QAAQnD,OACP,IAAMoD,OAAOD,QAEbC,OAAOD,QHPtB7E,WAAW+E,UAAUC,OAAS,WAC7B,OACC5E,IAAK,KACLF,WAAYC,KAAKD,iBGQb+E,eACFC,4BCfG,SAAqCC,YAoExCA,WAAWC,MAAQD,WAAWC,OAAS,EACvCD,WAAWE,SAAWF,WAAWE,UAAY,GAE7C,IAAIC,aAtE8B,SAAS5B,SACvC,IAAI6B,OACAtF,OAASyD,QAAQzD,QAAUuF,SAASC,cAAc,UAClDC,QAAUzF,OAAO0F,WAAW,MAC5BC,KAAOlC,QAAQkC,MAAQ,WACvBP,SAAW3B,QAAQ2B,UAAY,GAEnCpF,OAAO4F,MAAQ,GACf5F,OAAO6F,OAAS,GAChBJ,QAAQK,UAAU,EAAG,EAAG9F,OAAO4F,MAAO5F,OAAO6F,QAE7C,IAAIE,OAASvC,UAAUC,SACnBC,OAASqC,OAAO,GAChBpC,OAASoC,OAAO,GAGpB,GAFAN,QAAQO,YAEJvC,QAAQwC,OAAQ,CAChBR,QAAQE,KAAO,wBAA0BP,SAAW,MAAQO,KAE5DF,QAAQS,aAAe,MACvB,IAAIC,UAAYV,QAAQW,YAAY3C,QAAQ4C,cAC5Cf,OAASvB,KAAKC,MAAMhE,OAAO4F,MAAQ,EAAIO,UAAUP,MAAQ,GAEzDH,QAAQa,eAAiB,EACzBb,QAAQc,eAAiB,EACzBd,QAAQe,WAAa,EAErBf,QAAQgB,UAAY,UACpBhB,QAAQiB,YAAc,UAEtBjB,QAAQkB,SAASlD,QAAQ4C,aAAcf,OAAS,EAAG,GACnDG,QAAQkB,SAASlD,QAAQ4C,aAAcf,OAAQ,GAC/CG,QAAQgB,UAAY/C,OACpB+B,QAAQkB,SAASlD,QAAQ4C,aAAcf,OAAS,EAAG,GAEnDG,QAAQmB,YAAc,UACtBnB,QAAQoB,WAAWpD,QAAQ4C,aAAcf,OAAS,EAAG,OAClD,CACHG,QAAQE,KACJ,yBAA2BP,SAAW,GAAK,MAAQO,KAEvDF,QAAQS,aAAe,MACvB,IAAIY,WAAarB,QAAQW,YAAY3C,QAAQ4C,cAC7Cf,OAASvB,KAAKC,MAAMhE,OAAO4F,MAAQ,EAAIkB,WAAWlB,MAAQ,GAI1DH,QAAQa,cAAgB,EACxBb,QAAQc,cAAgB,EACxBd,QAAQe,WAAa,EACrBf,QAAQiB,YAAc,UACtBjB,QAAQgB,UAAY/C,OACpB+B,QAAQkB,SAASlD,QAAQ4C,aAAcf,OAAS,EAAG,GAEnDG,QAAQa,cAAgB,EACxBb,QAAQc,cAAgB,EACxBd,QAAQe,WAAa,EACrBf,QAAQiB,YAAc,UACtBjB,QAAQmB,YAAcjD,OACtB8B,QAAQoB,WAAWpD,QAAQ4C,aAAcf,OAAS,EAAG,GAKzD,OAFAtF,OAAOK,UAAYqD,OAEZ1D,OAMQ+G,CAA0B7B,YACzCjF,cAEAkF,MAAQD,WAAWC,MAgBvB,OAdAD,WAAW8B,KAAO,cAElB1G,OAAOC,OAAON,WAAYiF,YAEtB+B,OAAOC,QAAUD,OAAOC,OAAOC,MAC/B7G,OAAOC,OAAON,YACVmH,KAAM,IAAIF,OAAOC,KAAKE,KAAK,GAAKlC,MAAO,GAAKA,OAC5CmC,OAAQ,IAAIJ,OAAOC,KAAKI,MAAM,EAAG,GACjCC,OAAQ,IAAIN,OAAOC,KAAKI,MAAM,GAAKpC,MAAO,GAAKA,OAC/CsC,WAAY,IAAIP,OAAOC,KAAKE,KAAK,GAAKlC,MAAO,GAAKA,SAG5C,IAAIpF,WAAWsF,aAAcpF,aDxE3CyH,oBEhBG,SAA6BxC,YACnC,IA4EIC,MAAQD,WAAWC,OAAS,EAC/BE,aA7EyB,SAAS5B,SAClC,IAAIzD,OAASyD,QAAQzD,QAAUuF,SAASC,cAAc,UAKrDG,KAAOlC,QAAQkC,MAAQ,WACvBP,SAAW3B,QAAQ2B,UAAY,GAC/BK,QAAUzF,OAAO0F,WAAW,MAC5BiC,KAAOlC,QAAQmC,qBAAqB,EAAG,EAAG,EANhC,IAQX5H,OAAO4F,MAAQiC,GACf7H,OAAO6F,OAASiC,GAEhB,IAAI/B,OAASvC,UAAUC,SACtBC,OAASqC,OAAO,GAChBpC,OAASoC,OAAO,GAEjBN,QAAQK,UAAU,EAAG,EAAG9F,OAAO4F,MAAO5F,OAAO6F,QAE7C8B,KAAKI,aAAa,EAAGrE,QACrBiE,KAAKI,aAAa,EAAGpE,QAErB8B,QAAQgB,UAAYkB,KACpBlC,QAAQmB,YAAcjD,OACtB8B,QAAQO,YAERP,QAAQuC,OAzBG,GACA,IA2BXvC,QAAQwC,IA5BG,GA8BV,KA5BSJ,GACA,IA8BT9D,KAAKmE,GA9BI,KA+BT,GAIDzC,QAAQ0C,OAtCG,GACA,IAuCX1C,QAAQ2C,OACR3C,QAAQ4C,SAGR5C,QAAQO,YACRP,QAAQwC,IA7CG,GA+CV,KACAK,GACA,EACA,EAAIvE,KAAKmE,IACT,GAEDzC,QAAQgB,UAAY,QACpBhB,QAAQ2C,OAER3C,QAAQO,YAERP,QAAQE,KAAO,wBAA0BP,SAAW,MAAQO,KAE5DF,QAAQgB,UAAY9C,OACpB8B,QAAQS,aAAe,MAEvB,IAAIC,UAAYV,QAAQW,YAAY3C,QAAQ4C,cAC3Cf,OAAS7B,QAAQ4C,aACjBkC,QAAUxE,KAAKC,MAAMhE,OAAO4F,MAAQ,EAAIO,UAAUP,MAAQ,GAC1D4C,QAAU,EAAIzE,KAAKC,MAAMhE,OAAO6F,OAAS,EAAIT,SAAW,GAKzD,OAFAK,QAAQkB,SAASrB,OAAQiD,QAASC,SAClCxI,OAAOK,UAAYqD,OACZ1D,OAIQyI,CAAkBvD,YACjCjF,cAgBD,OAdAiF,WAAW8B,KAAO,YAElB1G,OAAOC,OAAON,WAAYiF,YAEtB+B,QAAUA,OAAOC,QAAUD,OAAOC,OAAOC,MAC5C7G,OAAOC,OAAON,YACbmH,KAAM,IAAIF,OAAOC,KAAKE,KAAK,GAAI,IAC/BC,OAAQ,IAAIJ,OAAOC,KAAKI,MAAM,EAAG,GACjCC,OAAQ,IAAIN,OAAOC,KAAKI,MAAM,GAAKpC,MAAO,GAAKA,OAC/CsC,WAAY,IAAIP,OAAOC,KAAKE,KAAK,GAAKlC,MAAO,GAAKA,OAClDA,MAAOA,QAGK,IAAIpF,WAAWsF,aAAcpF,aF7ExCyI,iBGjBG,SAA0BxD,YAkG7BA,WAAWC,MAAQD,WAAWC,OAAS,IACvC,IAAIE,aAlGmB,SAAS5B,SAC5B,IAAIzD,OAASuF,SAASC,cAAc,UAGpCxF,OAAO4F,MAAQ+C,GACf3I,OAAO6F,OAFI,GAGX,IAAI+C,EAAI5I,OAAO4F,MAAQ,EACnBiD,EAAI7I,OAAO6F,OAAS,EAIpBF,KAAO,IAAMlC,QAAQkC,KAAO,KAAO,QACnCP,SAAW3B,QAAQ2B,UAAY,GAE/BK,QAAUzF,OAAO0F,WAAW,MAEhCD,QAAQK,UAAU,EAAG,EAAG9F,OAAO4F,MAAO5F,OAAO6F,QAE7C,IACIiD,GAAKF,EAAI,KACTG,GAAKF,EAAI,KAETlB,KAAOlC,QAAQmC,qBAAqB,EAAG,EAAG,EAAG5H,OAAO6F,QACpDE,OAASvC,UAAUC,SACnBC,OAASqC,OAAO,GAChBpC,OAASoC,OAAO,GAEpB4B,KAAKI,aAAa,EAAGrE,QACrBiE,KAAKI,aAAa,EAAGpE,QAErB8B,QAAQgB,UAAYkB,KACpBlC,QAAQmB,YAAc,wBAEtBnB,QAAQO,YAGRP,QAAQwC,IACJa,GAAK,EACLC,GApBU,GAsBT,EAAIhF,KAAKmE,GAAM,GACd,EAAInE,KAAKmE,GAAM,GACjB,GAIJzC,QAAQwC,IAAIW,GAAIC,EAAI,GAAK,EAtCZF,GACA,GAqC+B5E,KAAKmE,GArCpC,IAqCiD,GAG9DzC,QAAQwC,IACJ,EAAIW,EAAIE,GAAK,EACbC,GAjCU,IAmCR,IAAOhF,KAAKmE,GAAM,GACnBnE,KAAKmE,GAAK,GACX,GAEJzC,QAAQ2C,OACR3C,QAAQ4C,SAER5C,QAAQO,YACRP,QAAQwC,IAAIW,EAAG,GAAMC,EAAG,GAAkB,EAAG,EAAI9E,KAAKmE,IAAI,GAC1DzC,QAAQgB,UAAY,QACpBhB,QAAQ2C,OAER3C,QAAQO,YAIRP,QAAQE,KAAOP,SAAW,MAAQO,KAClCF,QAAQS,aAAe,MAEvB,IAAIC,UAAYV,QAAQW,YAAY3C,QAAQuF,OAuB5C,OArBI7C,UAAUP,MAxEF,IAwEmBf,OAAOpB,QAAQuF,OAAOvH,OAAS,KAC1DgE,QAAQwD,KACJL,EAAI,EAAIzC,UAAUP,MAAQ,EAC1BiD,EAAI,GACJD,EAAI,EAAIzC,UAAUP,MAAQ,EAC1BiD,EAAI,IAERpD,QAAQgB,UAAY,UACpBhB,QAAQ2C,OACR3C,QAAQ4C,UAGZ5C,QAAQgB,UAAY,QACpBhB,QAAQmB,YAAc,QAEtBnB,QAAQkB,SACJlD,QAAQuF,MACR,EAAIjF,KAAKC,MAAMhE,OAAO4F,MAAQ,EAAIO,UAAUP,MAAQ,GACpD,GAGG5F,OAGQkJ,CAAehE,YAC9BjF,cAsBJ,OApBAiF,WAAW8B,KAAO,aAElB1G,OAAOC,OAAON,WAAYiF,YAEtB+B,QAAUA,OAAOC,QAAUD,OAAOC,OAAOC,MACzC7G,OAAOC,OAAON,YACVmH,KAAM,IAAIF,OAAOC,KAAKE,KAAK,GAAI,IAC/BC,OAAQ,IAAIJ,OAAOC,KAAKI,MAAM,EAAG,GACjCC,OAAQ,IAAIN,OAAOC,KAAKI,MACpB,GAAKrC,WAAWC,MAChB,GAAKD,WAAWC,OAEpBsC,WAAY,IAAIP,OAAOC,KAAKE,KACxB,GAAKnC,WAAWC,MAChB,GAAKD,WAAWC,SAId,IAAIpF,WAAWsF,aAAcpF,aHtG3CkJ,kBIpBJ,SAA2BjE,YAiGvBA,WAAWC,MAAQD,WAAWC,OAAS,EACvC,IAAIE,aAjG0B,SAAS5B,SACnC,IAIIE,OAJA3D,OAASyD,QAAQzD,QAAUuF,SAASC,cAAc,UAGlD8C,OAAST,GAETlC,KAAOlC,QAAQkC,MAAQ,WACvBP,SAAW3B,QAAQ2B,UAAY,GAC/BK,QAAUzF,OAAO0F,WAAW,MAEhC1F,OAAO4F,MAAQiC,GACf7H,OAAO6F,OAASiC,GAEhBrC,QAAQK,UAAU,EAAG,EAAG9F,OAAO4F,MAAO5F,OAAO6F,QAC7CJ,QAAQuC,OAZM,GACA,IAad,IAAIoB,WAAa/H,SAASoC,QAAQuF,MAAO,IACrCI,WAAa,IACbzF,OAAS,SACTyB,SAAW,IACJgE,WAAa,IACpBzF,OAAS,MACTyB,SAAW,KAEXzB,OAAS,SACTyB,SAAW,IAEXgE,WAAa,KACbd,QAAkB,EAClB7C,QAAQ4D,aAAa,EAAG,IACxB5D,QAAQO,YACRP,QAAQwC,IA7BE,GA+BN,KACAK,OAAS,EACT,EACA,EAAIvE,KAAKmE,IACT,GAEJzC,QAAQgB,UAAY,cACpBhB,QAAQmB,YAAcjD,OACtB8B,QAAQ6D,UAAY,EACpB7D,QAAQ2C,OACR3C,QAAQ4C,UAGZ5C,QAAQ4D,aAAa,EAAG,IACxB5D,QAAQO,YACRP,QAAQwC,IA9CM,GAgDV,KACAK,OAAS,EACT,EACA,EAAIvE,KAAKmE,IACT,GAEJzC,QAAQgB,UAAY,cACpBhB,QAAQmB,YAAcjD,OACtB8B,QAAQ6D,UAAY,EACpB7D,QAAQ2C,OACR3C,QAAQ4C,SAGR5C,QAAQ4D,aAAa,EAAG,IACxB5D,QAAQO,YACRP,QAAQwC,IA/DM,GAiEV,KACAK,OAAS,EACT,EACA,EAAIvE,KAAKmE,IACT,GAEJzC,QAAQgB,UAAY,QACpBhB,QAAQmB,YAAcjD,OACtB8B,QAAQ6D,UAAY,EACpB7D,QAAQ2C,OACR3C,QAAQ4C,SAER5C,QAAQO,YAERP,QAAQE,KAAO,wBAA0BP,SAAW,MAAQO,KAE5DF,QAAQgB,UAAY,OACpBhB,QAAQS,aAAe,MAEvB,IAAIC,UAAYV,QAAQW,YAAY3C,QAAQuF,OACxC1D,OAAS7B,QAAQuF,MACjBT,QAAUxE,KAAKC,MAAMhE,OAAO4F,MAAQ,EAAIO,UAAUP,MAAQ,GAC1D4C,QAAU,EAAIzE,KAAKC,MAAMhE,OAAO6F,OAAS,EAAIT,SAAW,GAK5D,OAFAK,QAAQkB,SAASrB,OAAQiD,QAASC,SAE3BxI,OAGQuJ,CAAsBrE,YACrCjF,cACAkF,MAAQD,WAAWC,MAevB,OAbA7E,OAAOC,OAAON,WAAYiF,YAEtB+B,QAAUA,OAAOC,QAAUD,OAAOC,OAAOC,MACzC7G,OAAOC,OAAON,YACVmH,KAAM,IAAIF,OAAOC,KAAKE,KAAK,GAAI,IAC/BC,OAAQ,IAAIJ,OAAOC,KAAKI,MAAM,EAAG,GACjCC,OAAQ,IAAIN,OAAOC,KAAKI,MAAM,GAAKpC,MAAO,GAAKA,OAC/CsC,WAAY,IAAIP,OAAOC,KAAKE,KAAK,GAAKlC,MAAO,GAAKA,SAI5C,IAAIpF,WAAWsF,aAAcpF,aJ5F3CuJ,iBAAkB,SAAS/F,SACvB,GAAuB,iBAAZA,QACP,OAAO,KAEX,IAAIgG,WAAanJ,OAAOoJ,QAAQjG,SAC3BkG,OAAO,SAASC,MACb,MACuB,mBAAZA,KAAK,IAAwC,iBAAZA,KAAK,KAGpDC,OACL,OAAOC,KAAKC,UAAUN,aAE1BO,iBAAkB,SAASvG,SACvB,IACIwG,QADAC,YAAclF,cAAc0C,oBAYhC,GAVAjE,QAAQuD,KAAO,YAEVvD,QAAQ0G,QAGF1G,QAAQ2G,yBACf3G,QAAQuD,KAAO,cACfkD,YAAclF,cAAcC,8BAJ5BxB,QAAQuD,KAAO,aACfkD,YAAclF,cAAc0D,mBAM3BjF,QAAQ4G,SAAU,CACnB,IAAIC,SAAWtF,cAAcwE,iBAAiB/F,SAG9C,GAAgB,QADhBwG,QAAUhD,OAAOsD,eAAeC,QAAQF,aACf7G,QAAQ4G,SAC7B,OAAOP,KAAKW,MAAMR,SAM1B,GAFAA,QAAUC,YAAYzG,UAEjBA,QAAQ4G,SAAU,CACnB,IAAIK,OAAST,QAAQlF,SACrB2F,OAAOvK,IAAM8J,QAAQ9J,IACrB8G,OAAOsD,eAAeI,QAAQL,SAAUR,KAAKC,UAAUW,SAE3D,OAAOT,SAaXW,iBAAkB,SAASC,UAAW9I,QAASC,cAC3C,IAGIe,IACAP,IAJA4B,aACI0G,SAAUD,WA0ClB,OArCA7I,aAAeA,cAAgB,EAC/BD,QAAUA,SAAW,EAIjBS,KAF8B,IAA9BqI,UAAUxG,QAAQ,ODmCvB,SAAkB1D,EAAGC,EAAGC,EAAGH,EAAGsB,cACjC,IAAIhB,EAAGC,EAAGC,EASV,GAPAc,aAAeA,cAAgB,EAC/BrB,EAAIyB,WAAWzB,EAAG,IAAM,IACxBC,EAAIwB,WAAWxB,EAAG,IAAM,IACxBC,EAAIuB,WAAWvB,EAAG,IAAM,SACdiC,IAANpC,IACAA,EAAI,GAEE,IAANE,EACAI,EAAIC,EAAIC,EAAIL,MACT,CACH,IAAIyC,EAAIzC,EAAI,GAAMA,GAAK,EAAID,GAAKC,EAAID,EAAIC,EAAID,EACxCyC,EAAI,EAAIxC,EAAIyC,EAChBtC,EAAIoC,QAAQC,EAAGC,EAAG3C,EAAI,EAAI,GAC1BM,EAAImC,QAAQC,EAAGC,EAAG3C,GAClBO,EAAIkC,QAAQC,EAAGC,EAAG3C,EAAI,EAAI,QAGpBmC,IAANpC,IACAA,EAAI,GAGR,IAAI8B,KACAxB,EAAG+C,KAAKgH,MAAU,IAAJ/J,EAAUgB,cACxBf,EAAG8C,KAAKgH,MAAU,IAAJ9J,EAAUe,cACxBd,EAAG6C,KAAKgH,MAAU,IAAJ7J,EAAUc,cACxBtB,EAAG0B,WAAW1B,EAAG,KAKrB,OAFA8B,IAAInC,UAAYS,WAAW0B,KAEpBA,IClEOwI,EADNjI,IAAMN,SAASoI,UAAW9I,UACPpB,EAAGoC,IAAInC,EAAGmC,IAAIlC,EAAGkC,IAAIrC,EAAGsB,eACN,IAA9B6I,UAAUxG,QAAQ,OACnBrB,SAAS6H,UAAW9I,QAASC,cAE7BH,SAASgJ,UAAW9I,QAASC,cAGvCe,ID8DD,SAAkBkI,KAAMC,KAAMC,KAAMC,MACvC,IAAIzK,EACAK,EAAKiK,KAAO,IAAO,IACnBhK,EAAKiK,KAAO,IAAO,IACnBhK,EAAKiK,KAAO,IAAO,IACnBzK,OAAaoC,IAATsI,KAAqB,EAAIA,KAC7BC,IAAMtH,KAAKsH,IAAIrK,EAAGC,EAAGC,GACrBoK,IAAMvH,KAAKuH,IAAItK,EAAGC,EAAGC,GACrBqK,IAAMF,IAAMC,IACZE,KAAOH,IAAMC,IACb1K,EAAI2K,IAAM,EAAIC,MAAQ,EAAID,KAAOC,KAAOD,IAE5C,OAAQF,KACJ,KAAKrK,EACDL,GAAKM,EAAIC,GAAKsK,MAAQvK,EAAIC,EAAI,EAAI,GAClC,MACJ,KAAKD,EACDN,GAAKO,EAAIF,GAAKwK,KAAO,EACrB,MACJ,KAAKtK,EACDP,GAAKK,EAAIC,GAAKuK,KAAO,EACrB,MACJ,QACI7K,EAAI,EAIZA,GAAK,EAEQ,IAAT6K,OACA7K,EAAIC,EAAI,GAGZ,IAAImC,KACApC,EAAGoD,KAAKgH,MAAM,IAAMpK,GACpBC,EAAGmD,KAAKgH,MAAM,IAAMnK,GACpBC,EAAGkD,KAAKgH,MAAM,GAAKQ,KACnB7K,EAAGqD,KAAKgH,MAAM,IAAMrK,GAAK,KAK7B,OAFAqC,IAAI1C,UAAYG,WAAWuC,KAEpBA,ICxGG0I,CAASjJ,IAAIxB,EAAGwB,IAAIvB,EAAGuB,IAAItB,EAAGsB,IAAI9B,GAExC0D,YAAYrB,KACRpC,EAAGoC,IAAIpC,EACPC,EAAGmC,IAAInC,EACPC,EAAGkC,IAAIlC,EACPH,EAAGqC,IAAIrC,GAEX0D,YAAY5B,KACRxB,EAAGwB,IAAIxB,EACPC,EAAGuB,IAAIvB,EACPC,EAAGsB,IAAItB,EACPR,EAAG8B,IAAI9B,GAGX0D,YAAY/D,UAAYmC,IAAInC,UAC5B+D,YAAYsH,KAAOlJ,IAAInC,UACvB+D,YAAYuH,KAAO5I,IAAI1C,UACvB+D,YAAY9B,YAAcE,IAAIF,YAC9B8B,YAAYnC,KACR,IACA0C,OAAOnC,IAAIxB,EAAE4K,SAAS,KACtBjH,OAAOnC,IAAIvB,EAAE2K,SAAS,KACtBjH,OAAOnC,IAAItB,EAAE0K,SAAS,MACxBrJ,KAAK,IACA6B,aASXyH,SAAU,SAASpI,SACf,MAAuB,iBAAZA,SACPqI,QAAQC,KAAK,oDACN,OAGXtI,QAAQ2G,wBAC+B,IAAnC3G,QAAQ2G,uBAEZ3G,QAAQuF,MAAQnE,OAAOpB,QAAQuF,OAAS,KACxCvF,QAAQc,MAAQd,QAAQc,OAAS,UAGJ,IAAzBd,QAAQuF,MAAMvH,QACoB,OAAlCgC,QAAQuF,MAAM3G,UAAU,EAAG,IAE3BoB,QAAQkC,KAAOlC,QAAQkC,MAAQ,WAC/BlC,QAAQuF,OAASvF,QAAQuF,OAAS,QAAQgD,OAAO,GACjDvI,QAAQ4C,aAAexB,OAAOoH,aAAa,KAAOxI,QAAQuF,OAC1DvF,QAAQ0B,MAAQ1B,QAAQ0B,OAAS,EACjC1B,QAAQ0G,SAAU,EAEXnF,cAAcgF,iBAAiBvG,UAC/BA,QAAQwC,OAGRjB,cAAcmE,kBAAkB1F,UAEvCA,QAAQ0B,MAAQ1B,QAAQ0B,OAAS,IACjC1B,QAAQuF,MAAQnE,OAAOpB,QAAQuF,OAAS,KACxCvF,QAAQ2B,SAAW3B,QAAQ2B,UAAY,GACvC3B,QAAQkC,KAAOlC,QAAQkC,MAAQ,QAGxBX,cAAcgF,iBAAiBvG"}